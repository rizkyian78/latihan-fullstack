[{"/home/rizkyian78/latihan-fullstack/src/index.js":"1","/home/rizkyian78/latihan-fullstack/src/reportWebVitals.js":"2","/home/rizkyian78/latihan-fullstack/src/App.jsx":"3","/home/rizkyian78/latihan-fullstack/src/pages/LandingPage.jsx":"4","/home/rizkyian78/latihan-fullstack/src/parts/Header.jsx":"5","/home/rizkyian78/latihan-fullstack/src/parts/IconText.jsx":"6","/home/rizkyian78/latihan-fullstack/src/elements/Button/index.jsx":"7","/home/rizkyian78/latihan-fullstack/src/parts/Hero.jsx":"8","/home/rizkyian78/latihan-fullstack/src/helper/Common.js":"9","/home/rizkyian78/latihan-fullstack/src/parts/MostPicked.jsx":"10","/home/rizkyian78/latihan-fullstack/src/parts/Category.jsx":"11","/home/rizkyian78/latihan-fullstack/src/parts/Testimony.jsx":"12","/home/rizkyian78/latihan-fullstack/src/elements/Star/index.jsx":"13","/home/rizkyian78/latihan-fullstack/src/parts/Footer.jsx":"14","/home/rizkyian78/latihan-fullstack/src/elements/WhatsappButton/index.jsx":"15","/home/rizkyian78/latihan-fullstack/src/pages/Example.jsx":"16","/home/rizkyian78/latihan-fullstack/src/elements/Form/InputNumber/index.jsx":"17","/home/rizkyian78/latihan-fullstack/src/elements/Form/InputDate/index.jsx":"18","/home/rizkyian78/latihan-fullstack/src/elements/Form/BreadCrumbs/index.jsx":"19","/home/rizkyian78/latihan-fullstack/src/pages/DetailPage.jsx":"20","/home/rizkyian78/latihan-fullstack/src/parts/PageDetailTitle.jsx":"21","/home/rizkyian78/latihan-fullstack/src/parts/FeatureImage.jsx":"22","/home/rizkyian78/latihan-fullstack/src/parts/PageDetailDescription.jsx":"23","/home/rizkyian78/latihan-fullstack/src/parts/BookingForm.jsx":"24","/home/rizkyian78/latihan-fullstack/src/elements/Form/index.jsx":"25","/home/rizkyian78/latihan-fullstack/src/pages/CheckOut.jsx":"26","/home/rizkyian78/latihan-fullstack/src/helper/useValidate.js":"27","/home/rizkyian78/latihan-fullstack/src/elements/Form/InputText/schema.js":"28","/home/rizkyian78/latihan-fullstack/src/elements/Stepper/index.jsx":"29","/home/rizkyian78/latihan-fullstack/src/parts/CheckOut/BookingInformation.jsx":"30","/home/rizkyian78/latihan-fullstack/src/parts/CheckOut/Payment.jsx":"31","/home/rizkyian78/latihan-fullstack/src/parts/CheckOut/Complete.jsx":"32","/home/rizkyian78/latihan-fullstack/src/elements/Stepper/Controller/index.jsx":"33","/home/rizkyian78/latihan-fullstack/src/elements/Form/InputFile/index.jsx":"34","/home/rizkyian78/latihan-fullstack/src/elements/Form/InputText/index.jsx":"35","/home/rizkyian78/latihan-fullstack/src/elements/Stepper/Numbering/index.jsx":"36","/home/rizkyian78/latihan-fullstack/src/elements/Stepper/Meta/index.jsx":"37","/home/rizkyian78/latihan-fullstack/src/elements/Stepper/MainContent/index.jsx":"38","/home/rizkyian78/latihan-fullstack/src/pages/Login.jsx":"39","/home/rizkyian78/latihan-fullstack/src/pages/Admin/Category.jsx":"40","/home/rizkyian78/latihan-fullstack/src/parts/NavbarAdmin.jsx":"41","/home/rizkyian78/latihan-fullstack/src/parts/Sidebar.jsx":"42","/home/rizkyian78/latihan-fullstack/src/parts/CategoryTable.jsx":"43","/home/rizkyian78/latihan-fullstack/src/parts/SearchBar.jsx":"44","/home/rizkyian78/latihan-fullstack/src/pages/Admin/Bank.jsx":"45","/home/rizkyian78/latihan-fullstack/src/parts/BankTable.jsx":"46","/home/rizkyian78/latihan-fullstack/src/pages/Admin/Booking.jsx":"47","/home/rizkyian78/latihan-fullstack/src/parts/BookingTable.jsx":"48","/home/rizkyian78/latihan-fullstack/src/MasterValidation/mvBank.js":"49","/home/rizkyian78/latihan-fullstack/src/parts/FeatureAndActivityTable.jsx":"50","/home/rizkyian78/latihan-fullstack/src/pages/Admin/FeatureAndActivity.jsx":"51","/home/rizkyian78/latihan-fullstack/src/pages/Admin/Item.jsx":"52","/home/rizkyian78/latihan-fullstack/src/parts/ItemTable.jsx":"53","/home/rizkyian78/latihan-fullstack/src/pages/Admin/ShowImage.jsx":"54","/home/rizkyian78/latihan-fullstack/src/parts/ShowImage.jsx":"55","/home/rizkyian78/latihan-fullstack/src/MasterValidation/mvFeature.js":"56","/home/rizkyian78/latihan-fullstack/src/MasterValidation/mvLogin.js":"57","/home/rizkyian78/latihan-fullstack/src/pages/test.jsx":"58","/home/rizkyian78/latihan-fullstack/src/assets/BallTriangle.jsx":"59","/home/rizkyian78/latihan-fullstack/src/pages/Admin/DetailBooking.jsx":"60","/home/rizkyian78/latihan-fullstack/src/parts/DetailBooking.jsx":"61","/home/rizkyian78/latihan-fullstack/src/Options/statusChanged.js":"62"},{"size":477,"mtime":1608049840703,"results":"63","hashOfConfig":"64"},{"size":362,"mtime":1607961534108,"results":"65","hashOfConfig":"64"},{"size":1561,"mtime":1616082556796,"results":"66","hashOfConfig":"64"},{"size":1160,"mtime":1611380722069,"results":"67","hashOfConfig":"64"},{"size":2612,"mtime":1612017113087,"results":"68","hashOfConfig":"64"},{"size":267,"mtime":1611252030288,"results":"69","hashOfConfig":"64"},{"size":2382,"mtime":1616176306063,"results":"70","hashOfConfig":"64"},{"size":3884,"mtime":1611460969668,"results":"71","hashOfConfig":"64"},{"size":2627,"mtime":1615906235837,"results":"72","hashOfConfig":"64"},{"size":1646,"mtime":1610986994938,"results":"73","hashOfConfig":"64"},{"size":2134,"mtime":1611456384754,"results":"74","hashOfConfig":"64"},{"size":1814,"mtime":1611501778106,"results":"75","hashOfConfig":"64"},{"size":1303,"mtime":1610861738968,"results":"76","hashOfConfig":"64"},{"size":3004,"mtime":1611251722150,"results":"77","hashOfConfig":"64"},{"size":406,"mtime":1611253522378,"results":"78","hashOfConfig":"79"},{"size":867,"mtime":1611377270832,"results":"80","hashOfConfig":"79"},{"size":1840,"mtime":1611391970518,"results":"81","hashOfConfig":"64"},{"size":3281,"mtime":1611464399339,"results":"82","hashOfConfig":"64"},{"size":974,"mtime":1611426889144,"results":"83","hashOfConfig":"64"},{"size":1787,"mtime":1611411620463,"results":"84","hashOfConfig":"64"},{"size":710,"mtime":1611379662695,"results":"85","hashOfConfig":"64"},{"size":845,"mtime":1611381345882,"results":"86","hashOfConfig":"64"},{"size":907,"mtime":1611384863595,"results":"87","hashOfConfig":"64"},{"size":3858,"mtime":1612029166016,"results":"88","hashOfConfig":"64"},{"size":232,"mtime":1611499808906,"results":"89","hashOfConfig":"64"},{"size":4973,"mtime":1611508583785,"results":"90","hashOfConfig":"64"},{"size":231,"mtime":1611425450659,"results":"91","hashOfConfig":"79"},{"size":205,"mtime":1611501334646,"results":"92","hashOfConfig":"64"},{"size":766,"mtime":1611503435103,"results":"93","hashOfConfig":"64"},{"size":2856,"mtime":1611502928584,"results":"94","hashOfConfig":"64"},{"size":2373,"mtime":1611493178252,"results":"95","hashOfConfig":"64"},{"size":743,"mtime":1611500472093,"results":"96","hashOfConfig":"64"},{"size":327,"mtime":1611408301318,"results":"97","hashOfConfig":"64"},{"size":1715,"mtime":1611504636885,"results":"98","hashOfConfig":"64"},{"size":2295,"mtime":1611503115358,"results":"99","hashOfConfig":"64"},{"size":842,"mtime":1611409858555,"results":"100","hashOfConfig":"64"},{"size":426,"mtime":1611408802165,"results":"101","hashOfConfig":"64"},{"size":186,"mtime":1611408812165,"results":"102","hashOfConfig":"64"},{"size":5176,"mtime":1616176327787,"results":"103","hashOfConfig":"64"},{"size":500,"mtime":1612096407982,"results":"104","hashOfConfig":"64"},{"size":1361,"mtime":1615907211747,"results":"105","hashOfConfig":"64"},{"size":2877,"mtime":1613221740065,"results":"106","hashOfConfig":"64"},{"size":7987,"mtime":1616176598514,"results":"107","hashOfConfig":"64"},{"size":763,"mtime":1616078125126,"results":"108","hashOfConfig":"64"},{"size":504,"mtime":1613159297971,"results":"109","hashOfConfig":"64"},{"size":9369,"mtime":1615816862599,"results":"110","hashOfConfig":"64"},{"size":513,"mtime":1612103690150,"results":"111","hashOfConfig":"64"},{"size":2738,"mtime":1616262537277,"results":"112","hashOfConfig":"64"},{"size":437,"mtime":1613314081127,"results":"113","hashOfConfig":"64"},{"size":13318,"mtime":1615905832084,"results":"114","hashOfConfig":"64"},{"size":556,"mtime":1615823070665,"results":"115","hashOfConfig":"64"},{"size":504,"mtime":1613221794022,"results":"116","hashOfConfig":"64"},{"size":21060,"mtime":1615300792532,"results":"117","hashOfConfig":"64"},{"size":176,"mtime":1613489720604,"results":"118","hashOfConfig":"64"},{"size":1642,"mtime":1614094385742,"results":"119","hashOfConfig":"64"},{"size":262,"mtime":1614971406904,"results":"120","hashOfConfig":"64"},{"size":331,"mtime":1615301402164,"results":"121","hashOfConfig":"64"},{"size":3210,"mtime":1615903507806,"results":"122","hashOfConfig":"64"},{"size":771,"mtime":1615990384915,"results":"123","hashOfConfig":"64"},{"size":516,"mtime":1616082598289,"results":"124","hashOfConfig":"64"},{"size":9771,"mtime":1616311991615,"results":"125","hashOfConfig":"64"},{"size":99,"mtime":1616265294941,"results":"126","hashOfConfig":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},"19uzam3",{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"129"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"129"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"1mewalq",{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"129"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"129"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"129"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"129"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"129"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"129"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"129"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"129"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"129"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"129"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"129"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"129"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"129"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"129"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"129"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"129"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},"/home/rizkyian78/latihan-fullstack/src/index.js",[],["271","272"],"/home/rizkyian78/latihan-fullstack/src/reportWebVitals.js",[],"/home/rizkyian78/latihan-fullstack/src/App.jsx",[],"/home/rizkyian78/latihan-fullstack/src/pages/LandingPage.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/Header.jsx",["273"],"import React from 'react'\nimport Fade from 'react-reveal/Fade'\nimport Button from 'elements/Button'\nimport IconText from 'parts/IconText'\nimport { Helmet } from 'react-helmet'\n\nexport default function Header(props) {\n  const [Active, setActive] = React.useState(false)\n  const getNavLinkClass = (path) => {\n    return props.location.pathname === path ? 'active' : ' '\n  }\n  const darkMode = () => {\n    setActive(!Active)\n  }\n  if (props.isCentered) {\n    return (\n      <>\n        <Helmet>\n          <title>Thonhouse | CheckOut</title>\n        </Helmet>\n        <Fade>\n          <header className=\"spacing-sm\">\n            <div className=\"container\">\n              <nav className=\"navbar navbar-expand-lg navbar-light\">\n                <Button className=\"brand-text-icon mx-auto\" href=\"\" type=\"link\">\n                  Thon<span className=\"text-gray-900\">House.</span>\n                </Button>\n              </nav>\n            </div>\n          </header>\n        </Fade>\n      </>\n    )\n  }\n  return (\n    <Fade>\n      <header className=\"spacing-sm\">\n        <div className=\"container\">\n          <nav className=\"navbar navbar-expand-lg navbar-light\">\n            <IconText />\n            <div className=\"collapse navbar-collapse\">\n              <ul className=\"navbar-nav ml-auto\">\n                <li className={`nav-item ${getNavLinkClass('/')}`}>\n                  <Button className=\"nav-link\" type=\"link\" href=\"/\">\n                    Home\n                  </Button>\n                </li>\n                <li className={`nav-item ${getNavLinkClass('/browse-by')}`}>\n                  <Button className=\"nav-link\" type=\"link\" href=\"/browse-by\">\n                    Browse By\n                  </Button>\n                </li>\n                <li className={`nav-item ${getNavLinkClass('/stories')}`}>\n                  <Button className=\"nav-link\" type=\"link\" href=\"/stories\">\n                    Stories\n                  </Button>\n                </li>\n                <li className={`nav-item ${getNavLinkClass('/agents')}`}>\n                  <Button className=\"nav-link\" type=\"link\" href=\"/agents\">\n                    Agents\n                  </Button>\n                </li>\n                <li className={`nav-item`}></li>\n                <li className={`nav-item ${getNavLinkClass('/agents')}`}>\n                  <Button className=\"nav-link\" type=\"link\" href=\"/admin\">\n                    Admin\n                  </Button>\n                </li>\n                <li className={`nav-item`}></li>\n              </ul>\n            </div>\n          </nav>\n        </div>\n      </header>\n    </Fade>\n  )\n}\n","/home/rizkyian78/latihan-fullstack/src/parts/IconText.jsx",[],"/home/rizkyian78/latihan-fullstack/src/elements/Button/index.jsx",["274","275"],"import React from 'react'\n\nimport { Link } from 'react-router-dom'\nimport propTypes from 'prop-types'\nimport BallTriangle from '../../assets/BallTriangle'\n\nexport default function Button(props) {\n  const className = [props.className]\n  if (props.isPrimary) className.push('btn-primary')\n  if (props.isLarge) className.push('btn-lg')\n  if (props.isSmall) className.push('btn-sm')\n  if (props.isBlock) className.push('btn-block')\n  if (props.hasShadow) className.push('btn-shadow')\n\n  const onClick = () => {\n    if (props.onClick) props.onClick()\n  }\n\n  if (props.isDisabled || props.isLoading) {\n    if (props.isDisabled) className.push('disabled')\n    return (\n      <span className={className.join(' ')} style={props.style}>\n        {props.isLoading ? (\n          <>\n            <span className=\"spinner-border spinner-border-sm mx-5\"></span>\n            <span className=\"sr-only\">Loading.....</span>\n          </>\n        ) : (\n          props.children\n        )}\n      </span>\n    )\n  }\n\n  if (props.type === 'link') {\n    if (props.isExternal) {\n      return (\n        <a\n          href={props.href}\n          className={className.join(' ')}\n          style={props.style}\n          target={props.target === '_blank' ? '_blank' : undefined}\n          rel={props.target === '_blank' ? 'noopener noreferrer' : undefined}\n        >\n          {props.children}\n        </a>\n      )\n    } else {\n      return (\n        <Link\n          to={props.href}\n          className={className.join(' ')}\n          style={props.style}\n          onClick={onClick} //jika tanpa arrow akan dilempar ke props component dan di eksekusi disana jika menggunakan arrow akan dieksekusi di component tersebut\n        >\n          {props.children}\n        </Link>\n      )\n    }\n  }\n  return (\n    <button\n      className={className.join(' ')}\n      {...props.rest}\n      style={props.style}\n      onClick={onClick}\n    >\n      {props.children}\n    </button>\n  )\n}\n\n//seperti yup\nButton.propTypes = {\n  type: propTypes.oneOf(['button', 'link']), //mirip seperti enum\n  onClick: propTypes.func,\n  target: propTypes.string,\n  className: propTypes.string,\n  href: propTypes.string,\n  isDisabled: propTypes.bool,\n  isLoading: propTypes.bool,\n  isSmall: propTypes.bool,\n  isLarge: propTypes.bool,\n  isBlock: propTypes.bool,\n  isExternal: propTypes.bool,\n  hasShadow: propTypes.bool,\n  isPrimary: propTypes.bool,\n}\n","/home/rizkyian78/latihan-fullstack/src/parts/Hero.jsx",[],"/home/rizkyian78/latihan-fullstack/src/helper/Common.js",[],"/home/rizkyian78/latihan-fullstack/src/parts/MostPicked.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/Category.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/Testimony.jsx",[],"/home/rizkyian78/latihan-fullstack/src/elements/Star/index.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/Footer.jsx",[],"/home/rizkyian78/latihan-fullstack/src/elements/WhatsappButton/index.jsx",[],["276","277"],"/home/rizkyian78/latihan-fullstack/src/pages/Example.jsx",[],"/home/rizkyian78/latihan-fullstack/src/elements/Form/InputNumber/index.jsx",[],"/home/rizkyian78/latihan-fullstack/src/elements/Form/InputDate/index.jsx",[],"/home/rizkyian78/latihan-fullstack/src/elements/Form/BreadCrumbs/index.jsx",[],"/home/rizkyian78/latihan-fullstack/src/pages/DetailPage.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/PageDetailTitle.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/FeatureImage.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/PageDetailDescription.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/BookingForm.jsx",[],"/home/rizkyian78/latihan-fullstack/src/elements/Form/index.jsx",[],"/home/rizkyian78/latihan-fullstack/src/pages/CheckOut.jsx",[],"/home/rizkyian78/latihan-fullstack/src/helper/useValidate.js",[],"/home/rizkyian78/latihan-fullstack/src/elements/Form/InputText/schema.js",["278"],"import * as yup from 'yup'\n\nconst create = yup.object().shape({\n  email: yup\n    .string()\n    .email()\n    .typeError('Harus Di isi')\n    .required('Email Wajib Di isi'),\n})\n\nexport default {\n  create,\n}\n","/home/rizkyian78/latihan-fullstack/src/elements/Stepper/index.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/CheckOut/BookingInformation.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/CheckOut/Payment.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/CheckOut/Complete.jsx",[],"/home/rizkyian78/latihan-fullstack/src/elements/Stepper/Controller/index.jsx",[],"/home/rizkyian78/latihan-fullstack/src/elements/Form/InputFile/index.jsx",["279","280","281"],"import React from 'react'\nimport propTypes from 'prop-types'\n\nimport './index.scss'\nexport default function InputFile(props) {\n  const [FileName, setFileName] = React.useState('')\n  const {\n    value,\n    accept,\n    placeholder,\n    name,\n    prepend,\n    append,\n    outerClassName,\n    inputClassName,\n  } = props\n  const refInputFile = React.useRef(null)\n  const onChange = (event) => {\n    setFileName(event.target.value)\n    props.onChange({\n      target: {\n        name: event.target.name,\n        value: event.target.files,\n      },\n    })\n  }\n\n  return (\n    <div className={[`input-text mb-3`, outerClassName].join(' ')}>\n      <div className=\"input-group\">\n        {prepend && (\n          <div className=\"input-group-prepend bg-gray-900\">\n            <span className=\"input-group-text\">{prepend}</span>\n          </div>\n        )}\n\n        <input\n          accept={accept}\n          ref={refInputFile}\n          name={name}\n          type=\"file\"\n          value={FileName}\n          onChange={onChange}\n        />\n        {append && (\n          <div className=\"input-group-append bg-gray-900\">\n            <span className=\"input-group-text\">{append}</span>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nInputFile.defaultProps = {\n  placeholder: 'Please Type Here',\n}\n\nInputFile.propTypes = {\n  name: propTypes.string.isRequired,\n  accept: propTypes.string.isRequired,\n  value: propTypes.string.isRequired,\n  onChange: propTypes.func.isRequired,\n  prepend: propTypes.oneOfType([propTypes.number, propTypes.string]),\n  append: propTypes.oneOfType([propTypes.number, propTypes.string]),\n  placeholder: propTypes.string,\n  outerClassName: propTypes.string,\n  inputClassName: propTypes.string,\n}\n","/home/rizkyian78/latihan-fullstack/src/elements/Form/InputText/index.jsx",["282"],"import React from 'react'\nimport propTypes from 'prop-types'\nimport schema from './schema'\n\nimport './index.scss'\n\nexport default function IndexText(props) {\n  const {\n    value,\n    type,\n    placeholder,\n    name,\n    prepend,\n    append,\n    outerClassName,\n    inputClassName,\n    errorResponse,\n  } = props\n  const [HasError, setHasError] = React.useState(null)\n  let pattern = ''\n  if (type === 'email') pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n  if (type === 'tel') pattern = '[0-9]*'\n  const onChange = (event) => {\n    const target = {\n      target: {\n        name: name,\n        value: event.target.value,\n      },\n    }\n\n    if (type === 'email') {\n      if (!pattern.test(event.target.value)) setHasError(errorResponse)\n      else setHasError(null)\n    }\n\n    if (type === 'tel') {\n      if (event.target.validity.valid) props.onChange(target)\n    } else {\n      props.onChange(target)\n    }\n  }\n\n  return (\n    <div className={[`input-text mb-3`, outerClassName].join(' ')}>\n      <div className=\"input-group\">\n        {prepend && (\n          <div className=\"input-group-prepend bg-gray-900\">\n            <span className=\"input-group-text\">{prepend}</span>\n          </div>\n        )}\n        <input\n          type={type}\n          name={name}\n          className={[`form-control`, inputClassName].join(' ')}\n          value={value}\n          placeholder={placeholder}\n          onChange={onChange}\n        />\n        {append && (\n          <div className=\"input-group-append bg-gray-900\">\n            <span className=\"input-group-text\">{append}</span>\n          </div>\n        )}\n        {HasError && <span className=\"error-helper\">{HasError}</span>}\n      </div>\n    </div>\n  )\n}\n\nIndexText.defaultProps = {\n  type: 'text',\n  pattern: '',\n  placeholder: 'Please Type Here',\n  errorResponse: 'Please match the requested format',\n}\n\nIndexText.propTypes = {\n  name: propTypes.string.isRequired,\n  value: propTypes.oneOfType([propTypes.number, propTypes.string]).isRequired,\n  onChange: propTypes.func.isRequired,\n  prepend: propTypes.oneOfType([propTypes.number, propTypes.string]),\n  append: propTypes.oneOfType([propTypes.number, propTypes.string]),\n  type: propTypes.string,\n  placeholder: propTypes.string,\n  outerClassName: propTypes.string,\n  inputClassName: propTypes.string,\n}\n","/home/rizkyian78/latihan-fullstack/src/elements/Stepper/Numbering/index.jsx",[],"/home/rizkyian78/latihan-fullstack/src/elements/Stepper/Meta/index.jsx",[],"/home/rizkyian78/latihan-fullstack/src/elements/Stepper/MainContent/index.jsx",[],"/home/rizkyian78/latihan-fullstack/src/pages/Login.jsx",["283"],"import React, { Component } from 'react'\nimport { notification } from 'antd'\nimport Header from 'parts/Header'\nimport BreadCrumbs from 'elements/Form/BreadCrumbs/index'\nimport moment from 'moment'\nimport Fade from 'react-reveal/Fade'\nimport Button from 'elements/Button'\nimport AdminImage from 'assets/images/image/undraw_mobile_login_ikmv.svg'\nimport Swal from 'sweetalert2'\nimport Clock from 'react-live-clock'\nimport { Helmet } from 'react-helmet'\nimport { Formik } from 'formik'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport schema from 'MasterValidation/mvLogin'\n\nimport 'moment/locale/id'\n\nimport './Login.scss'\nimport 'assets/antd.scss'\n\nclass Login extends Component {\n  state = {\n    email: '',\n    password: '',\n  }\n  logAuth = (data) => {\n    axios\n      .post(`http://localhost:8090/v1/auth/sign-in`, data)\n      .then((res) => {\n        console.log(res.data)\n        localStorage.setItem('Authorization', res.data.accessToken)\n        notification.success({\n          message: `Hello ${res.data.user.nama}`,\n          duration: 1,\n        })\n        setTimeout(() => {\n          this.props.history.push('/admin/category')\n        }, 500)\n      })\n      .catch((err) => {\n        notification.error({\n          message: err.response.data.message,\n        })\n      })\n  }\n  render() {\n    const breadCrumbList = [\n      {\n        pageTitle: 'Login',\n        pageHref: '',\n      },\n      {\n        pageTitle: 'Admin',\n        pageHref: '',\n      },\n    ]\n\n    return (\n      <>\n        <Helmet>\n          <title>ThonHouse</title>\n        </Helmet>\n        <Fade top>\n          <Header isCentered {...this.props} />\n          <div className=\"container\">\n            <BreadCrumbs data={breadCrumbList} />\n            <div className=\"column\">\n              <div className=\"is-hour\">\n                <Clock\n                  format={'HH:mm:ss'}\n                  ticking={true}\n                  timezone={'Asia/Jakarta'}\n                />\n              </div>\n              <div>\n                {moment().locale('id').format('dddd')},{' '}\n                {moment().locale('id').format('LL')}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm\"></div>\n              <div className=\"col-sm img-fluid\">\n                <figure className=\"figure\">\n                  <img\n                    src={AdminImage}\n                    alt=\"ntaps\"\n                    className=\"figure-img img-fluid\"\n                  />\n                </figure>\n              </div>\n            </div>\n            <Formik\n              initialValues={this.state}\n              validationSchema={schema.login}\n              onSubmit={(values) => {\n                this.logAuth(values)\n              }}\n            >\n              {({\n                handleChange,\n                handleSubmit,\n                errors,\n                touched,\n                isSubmitting,\n              }) => {\n                return (\n                  <>\n                    {}\n                    <div className=\"col-sm panel-box panel-font\">\n                      <div class=\"form-floating\" style={{ paddingTop: 30 }}>\n                        <label for=\"floatingInput\">Email address</label>\n                        <input\n                          type=\"email\"\n                          name=\"email\"\n                          class=\"form-control\"\n                          id=\"floatingInput\"\n                          onChange={handleChange}\n                          placeholder=\"name@example.com\"\n                        />\n                        {touched.email && (\n                          <p className=\"bounce\" style={{ color: 'red' }}>\n                            {errors.email}\n                          </p>\n                        )}\n                      </div>\n                      <div class=\"form-floating\">\n                        <label for=\"floatingPassword\">Password</label>\n                        <input\n                          type=\"password\"\n                          name=\"password\"\n                          class=\"form-control\"\n                          id=\"floatingPassword\"\n                          onChange={handleChange}\n                          placeholder=\"Password\"\n                        />\n                        {touched.password && (\n                          <p className=\"bounce\" style={{ color: 'red' }}>\n                            {errors.password}\n                          </p>\n                        )}\n                      </div>\n                    </div>\n\n                    <Button\n                      style={{ width: 350, position: 'fixed' }}\n                      isLoading={isSubmitting}\n                      className=\"btn mt-2 btn-primary button-border justify-content-center\"\n                      onClick={handleSubmit}\n                      href={`/admin/example`}\n                    >\n                      {' '}\n                      Login\n                    </Button>\n                  </>\n                )\n              }}\n            </Formik>\n          </div>\n        </Fade>\n      </>\n    )\n  }\n}\n\nexport default withRouter(Login)\n","/home/rizkyian78/latihan-fullstack/src/pages/Admin/Category.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/NavbarAdmin.jsx",["284","285","286","287","288"],"import Header from 'parts/Header'\nimport { parseJwt } from 'helper/Common'\nimport React, { Component } from 'react'\nimport { Navbar, Nav, Icon } from 'rsuite'\nimport { Badge, Menu, Dropdown, Button } from 'antd'\nimport { withRouter } from 'react-router-dom'\n\nimport 'rsuite/dist/styles/rsuite-default.css'\nimport 'antd/dist/antd.css'\n\nclass Admin extends Component {\n  render() {\n    const payload = parseJwt(localStorage.getItem('Authorization'))\n    return (\n      <>\n        <Navbar appearance=\"subtle\" className=\"shadow\">\n          <Navbar.Header className=\"mb-2\">\n            <Header isCentered {...this.props} />\n          </Navbar.Header>\n          <Navbar.Body>\n            <Nav pullRight>\n              <Badge count={100} overflowCount={99} size=\"default\">\n                <a href=\"#\" className=\"head-example\" />\n              </Badge>\n              <Nav.Item icon={<Icon icon=\"bell\" size=\"lg\" />} active></Nav.Item>\n              <Nav.Item>{payload.nama}</Nav.Item>\n              <Nav.Item\n                onSelect={(e) => {\n                  localStorage.removeItem('Authorization')\n                  console.log(this.props.history.push('/admin'))\n                }}\n              >\n                Logout\n              </Nav.Item>\n            </Nav>\n          </Navbar.Body>\n        </Navbar>\n      </>\n    )\n  }\n}\n\nexport default withRouter(Admin)\n","/home/rizkyian78/latihan-fullstack/src/parts/Sidebar.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/CategoryTable.jsx",["289"],"import React from 'react'\nimport {\n  Table,\n  Button,\n  Row,\n  Col,\n  Card,\n  Typography,\n  Modal,\n  Input,\n  Tooltip,\n  Popconfirm,\n  notification,\n  message,\n  Skeleton,\n} from 'antd'\nimport axios from 'axios'\nimport { Formik } from 'formik'\nimport schema from 'MasterValidation/mvBank'\n\nimport 'antd/dist/antd.css'\nimport './CategoryTable.scss'\n\nexport default function CategoryTable() {\n  const [isModalShow, setIsModalShow] = React.useState(false)\n  const [modalType, setModalType] = React.useState('')\n  const [category, setCategory] = React.useState('')\n  const [isLoading, setIsLoading] = React.useState(false)\n  const [initialValues, setInitialValues] = React.useState({\n    id: '',\n    name: '',\n  })\n\n  React.useEffect(() => {\n    setIsLoading(true)\n    axios\n      .get('http://localhost:8090/v1/category')\n      .then((res) => {\n        setIsLoading(false)\n        setCategory(res.data.data)\n      })\n      .catch((err) => console.log(err))\n  }, [axios])\n\n  const columns = [\n    {\n      title: 'No',\n      width: 200,\n      dataIndex: 'nomor',\n      defaultSortOrder: 'ascend',\n      sorter: (a, b) => a.nomor - b.nomor,\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      defaultSortOrder: 'ascend',\n      sorter: (a, b) => a.name - b.name,\n    },\n    {\n      title: 'Action',\n      width: 200,\n      render: (value) => {\n        return (\n          <Row gutter={[6]} justify=\"space-around\">\n            <Col>\n              <Tooltip placement=\"rightTop\">\n                <Button\n                  style={{ borderRadius: 20 }}\n                  onClick={() => showModal(value)}\n                >\n                  Edit\n                </Button>\n              </Tooltip>\n            </Col>\n            <Col>\n              <Popconfirm\n                title=\"Are you sure to delete this item?\"\n                onConfirm={() => handleDelete(value)}\n                onCancel={cancel}\n                okText=\"Yes\"\n                cancelText=\"No\"\n                placement=\"left\"\n              >\n                <Tooltip placement=\"rightTop\">\n                  <Button style={{ borderRadius: 20 }} danger>\n                    Delete\n                  </Button>\n                </Tooltip>\n              </Popconfirm>\n            </Col>\n          </Row>\n        )\n      },\n    },\n  ]\n  function cancel(e) {\n    message.error('Click on No')\n  }\n  function handleEdit(data) {\n    axios\n      .put(`http://localhost:8090/v1/category/${data.id}`, data)\n      .then((res) => {\n        axios\n          .get('http://localhost:8090/v1/category')\n          .then((res) => {\n            notification.success({\n              message: 'Berhasil Mengubah Data',\n              duration: 2.5,\n            })\n            setCategory(res.data.data)\n          })\n          .catch((err) => console.log(err))\n      })\n      .catch((err) => message.error(err.message))\n    setIsModalShow(false)\n  }\n\n  function handleDelete(data) {\n    axios.delete(`http://localhost:8090/v1/category/${data.id}`).then((res) => {\n      axios\n        .get('http://localhost:8090/v1/category')\n        .then((res) => {\n          setCategory(res.data.data)\n        })\n        .catch((err) => message.error('Blok'))\n    })\n    notification.success({\n      message: 'Berhasil Menghapus Data',\n      duration: 2.5,\n    })\n  }\n  const showModal = (value) => {\n    setInitialValues(value)\n    setIsModalShow(true)\n    setModalType('edit')\n  }\n  const handleAdd = (data) => {\n    axios\n      .post(`http://localhost:8090/v1/category`, data)\n      .then((res) => {\n        axios\n          .get('http://localhost:8090/v1/category')\n          .then((res) => {\n            notification.success({\n              message: 'Berhasil Menambah Data',\n              duration: 2.5,\n            })\n            setCategory(res.data.data)\n          })\n          .catch((err) => console.log(err))\n      })\n      .catch((err) => message.error('Harap Masukkan nama'))\n    setCategory('')\n    setIsModalShow(false)\n  }\n  const handleCancel = (e) => {\n    setIsModalShow(false)\n  }\n  const data = []\n  for (let i = 0; i < category.length; i++) {\n    data.push({\n      id: category[i]._id,\n      nomor: i + 1,\n      name: category[i].name,\n    })\n  }\n  const onSearch = (value) => {\n    axios\n      .get(\n        `http://localhost:8090/v1/category?filtered=[{\"id\":\"name\",\"value\":\"${value}\"}]`,\n      )\n      .then((res) => {\n        setCategory(res.data.data)\n      })\n\n    setCategory('')\n  }\n  function onChange(pagination, filters, sorter, extra) {\n    if (sorter) {\n      console.log(sorter.order)\n      axios\n        .get(\n          `http://localhost:8090/v1/category?sorted=[{\"id\":\"name\",\"${sorter.order}\":\"true\"}]`,\n        )\n        .then((res) => {\n          setCategory(res.data.data)\n        })\n    }\n  }\n  return (\n    <>\n      <Card className=\"shadow mt-3\" style={{ borderRadius: 30 }}>\n        <Typography.Title level={2}>Category</Typography.Title>\n        {isLoading ? (\n          <>\n            <Skeleton active round loading />\n          </>\n        ) : (\n          <>\n            <Row justify=\"space-between\" align=\"middle\" gutter={[16, 8]}>\n              <Col>\n                <Button\n                  type=\"primary\"\n                  onClick={() => {\n                    setIsModalShow(true)\n                    setModalType('add')\n                  }}\n                  style={{ borderRadius: 10 }}\n                >\n                  Add\n                </Button>\n              </Col>\n              <Input.Search\n                placeholder=\"Coba Cari Sini bos\"\n                onSearch={onSearch}\n                style={{ width: 300, borderRadius: 30 }}\n                allowClear\n                enterButton\n              />\n            </Row>\n\n            <Table\n              columns={columns}\n              onChange={onChange}\n              bordered={true}\n              dataSource={data}\n              pagination={{\n                pageSize: 5,\n                total: category.length,\n              }}\n            />\n            <Modal\n              className=\"mbut\"\n              footer={null}\n              title={modalType === 'edit' ? 'Edit' : 'Add'}\n              visible={isModalShow}\n              onCancel={handleCancel}\n            >\n              <Typography.Text style={{ fontWeight: 'bolder' }}>\n                Name Category\n              </Typography.Text>\n              <Formik\n                validationSchema={schema.category}\n                initialValues={initialValues}\n                enableReinitialize={true}\n                onSubmit={(values, actions) => {\n                  if (modalType === 'edit') {\n                    handleEdit(values)\n                  } else {\n                    handleAdd(values)\n                  }\n                }}\n              >\n                {({ values, handleChange, handleSubmit, errors, touched }) => {\n                  const condition =\n                    errors.name && touched.name ? 'mt-2 bounce' : 'mt-2'\n                  return (\n                    <>\n                      <Input\n                        allowClear\n                        className={condition}\n                        style={{ borderRadius: 10 }}\n                        name=\"name\"\n                        value={values.name}\n                        placeholder=\"Input Nama Category\"\n                        onChange={handleChange}\n                      />\n                      <Row justify=\"center\" className=\"mt-2\">\n                        <Col>\n                          <Button\n                            type=\"primary\"\n                            style={{ width: 400, borderRadius: 10 }}\n                            onClick={handleSubmit}\n                          >\n                            Submit\n                          </Button>\n                        </Col>\n                      </Row>\n                    </>\n                  )\n                }}\n              </Formik>\n            </Modal>\n          </>\n        )}\n      </Card>\n    </>\n  )\n}\n","/home/rizkyian78/latihan-fullstack/src/parts/SearchBar.jsx",["290","291","292","293"],"import React from 'react'\nimport { Input, Space, Row } from 'antd'\nimport { SearchOutlined } from '@ant-design/icons'\nimport axios from 'axios'\n\nimport 'antd/dist/antd.css'\n\nexport default function SearchBar(props) {\n  const [category, setCategory] = React.useState('')\n  const onSearch = (value) => {\n    axios\n      .get(\n        `http://localhost:8090/v1/category?filtered=[{\"id\":\"${props.field}\",\"value\":\"${value}\"}]`,\n      )\n      .then((res) => {\n        setCategory(res.data.data)\n      })\n      .catch((err) => console.log(err))\n  }\n  return (\n    <>\n      <Input.Search\n        height={200}\n        placeholder=\"Coba Cari Sini bos\"\n        onSearch={onSearch}\n        size=\"large\"\n        style={{ width: 300, borderRadius: 30 }}\n      />\n    </>\n  )\n}\n","/home/rizkyian78/latihan-fullstack/src/pages/Admin/Bank.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/BankTable.jsx",["294"],"import React from 'react'\nimport {\n  Table,\n  Button,\n  Card,\n  Row,\n  Col,\n  Typography,\n  Modal,\n  Input,\n  message,\n  Tooltip,\n  Popconfirm,\n  Image,\n  Upload,\n} from 'antd'\nimport { UploadOutlined } from '@ant-design/icons'\nimport SearchBar from './SearchBar'\nimport { Formik } from 'formik'\nimport axios from 'axios'\n\nimport 'antd/dist/antd.css'\n\nexport default function CategoryTable(props) {\n  const [isModalShow, setIsModalShow] = React.useState(false)\n  const [dataBank, setDataBank] = React.useState('')\n  const [modalType, setModalType] = React.useState('')\n  const [initialValues, setInitialValues] = React.useState({\n    id: '',\n    nameBank: '',\n    nomorRekening: '',\n    name: '',\n    image: '',\n  })\n\n  const columns = [\n    {\n      title: 'No',\n      dataIndex: 'nomor',\n      sorter: (a, b) => a.nomor - b.nomor,\n      sortDirections: ['desc'],\n    },\n    {\n      title: 'Nama Bank',\n      dataIndex: 'nameBank',\n      defaultSortOrder: 'desc',\n    },\n    {\n      title: 'Nomor Rekening',\n      dataIndex: 'nomorRekening',\n      filterMultiple: false,\n      sortDirections: ['desc', 'asc'],\n    },\n    {\n      title: 'Nama',\n      dataIndex: 'name',\n      defaultSortOrder: 'descend',\n    },\n    {\n      title: 'Image',\n      dataIndex: 'imageUrl',\n      render: (path) => (\n        <Image width={200} height={100} src={`http://localhost:8090/${path}`} />\n      ),\n    },\n    {\n      title: 'Action',\n      width: 200,\n      render: (value) => {\n        return (\n          <Row gutter={[6]} justify=\"space-around\">\n            <Col>\n              <Tooltip placement=\"rightTop\">\n                <Button\n                  style={{ borderRadius: 20 }}\n                  onClick={() => showModal(value)}\n                >\n                  Edit\n                </Button>\n              </Tooltip>\n            </Col>\n            <Col>\n              <Popconfirm\n                title=\"Are you sure to delete this item?\"\n                onConfirm={() => handleDelete(value)}\n                onCancel={cancel}\n                okText=\"Yes\"\n                cancelText=\"No\"\n                placement=\"left\"\n              >\n                <Tooltip placement=\"rightTop\">\n                  <Button style={{ borderRadius: 20 }} danger>\n                    Delete\n                  </Button>\n                </Tooltip>\n              </Popconfirm>\n            </Col>\n          </Row>\n        )\n      },\n    },\n  ]\n  React.useEffect(() => {\n    axios.get('http://localhost:8090/v1/bank').then((res) => {\n      setDataBank(res.data.data)\n    })\n  }, [axios])\n  function onChange(pagination, filters, sorter, extra) {\n    console.log(pagination, filters, sorter, extra)\n    console.log('params', pagination, filters, sorter, extra)\n  }\n  const handleAdd = (data) => {\n    axios\n      .post(`http://localhost:8090/v1/bank`, data)\n      .then((res) => {\n        message.success('Berhasil Menambah Data')\n        axios.get('http://localhost:8090/v1/bank').then((res) => {\n          setDataBank(res.data.data)\n        })\n      })\n      .catch((err) => {\n        message.error(err.response.data.message)\n      })\n\n    setIsModalShow(false)\n  }\n  function cancel(e) {\n    console.log(e)\n    message.error('Click on No')\n  }\n  const showModal = (value) => {\n    setInitialValues(value)\n    setIsModalShow(true)\n    setModalType('edit')\n  }\n  function handleDelete(data) {\n    axios.delete(`http://localhost:8090/v1/bank/${data._id}`).then((res) => {\n      axios\n        .get('http://localhost:8090/v1/bank')\n        .then((res) => {\n          setDataBank(res.data.data)\n        })\n        .catch((err) => message.error('Tidak Bisa Di Delete'))\n    })\n    message.success('Data berhasil Di Delete')\n  }\n  function handleEdit(id, data) {\n    axios\n      .put(`http://localhost:8090/v1/bank/${id}`, data)\n      .then((res) => {\n        axios\n          .get('http://localhost:8090/v1/bank')\n          .then((res) => {\n            message.success('Data Berhasil Diubah')\n            setDataBank(res.data.data)\n          })\n          .catch((err) => console.log(err))\n      })\n      .catch((err) => message.error(err.message))\n    setIsModalShow(false)\n  }\n  const handleOk = (e) => {\n    setIsModalShow(false)\n  }\n  const handleCancel = (e) => {\n    setIsModalShow(false)\n  }\n  const data = []\n  for (let i = 0; i < dataBank.length; i += 1) {\n    data.push({\n      _id: dataBank[i]._id,\n      nomor: i + 1,\n      nameBank: dataBank[i].nameBank,\n      nomorRekening: dataBank[i].nomorRekening,\n      imageUrl: dataBank[i].imageUrl,\n      name: dataBank[i].name,\n    })\n  }\n  return (\n    <>\n      <Card className=\"shadow mt-3\" style={{ borderRadius: 30 }}>\n        <Typography.Title level={2}>Bank</Typography.Title>\n        <Row justify=\"space-between\" align=\"middle\" gutter={[16, 8]}>\n          <Col>\n            <Button\n              type=\"primary\"\n              style={{ borderRadius: 10 }}\n              onClick={() => {\n                setIsModalShow(true)\n                setModalType('add')\n              }}\n            >\n              Add\n            </Button>\n            <Modal\n              afterClose={() => {\n                setInitialValues({\n                  name: '',\n                  image: '',\n                  nameBank: '',\n                  nomorRekening: '',\n                })\n              }}\n              centered\n              footer={null}\n              title={modalType === 'edit' ? 'Edit Item' : 'Add Item'}\n              visible={isModalShow}\n              onOk={handleOk}\n              onCancel={handleCancel}\n              bodyStyle={{ borderRadius: 20 }}\n            >\n              <Formik\n                initialValues={initialValues}\n                enableReinitialize={true}\n                onSubmit={(values, actions) => {\n                  const formData = new FormData()\n                  for (const [key, value] of Object.entries(values)) {\n                    if (key === 'image') {\n                      formData.append('image', values.image.originFileObj)\n                    } else {\n                      formData.append(key, value)\n                    }\n                  }\n                  if (modalType === 'edit') {\n                    handleEdit(values._id, formData)\n                  } else {\n                    handleAdd(formData)\n                  }\n                }}\n              >\n                {({ values, handleChange, handleSubmit, setFieldValue }) => {\n                  return (\n                    <>\n                      <Typography.Text>Nama Bank</Typography.Text>\n                      <Input\n                        placeholder=\"Input Nama Bank\"\n                        className=\"mt-2\"\n                        style={{ borderRadius: 10 }}\n                        name=\"nameBank\"\n                        value={values.nameBank}\n                        onChange={handleChange}\n                      />\n                      <Typography.Text>Nomor Rekening</Typography.Text>\n                      <Input\n                        placeholder=\"Input Nomor Rekening\"\n                        className=\"mt-2\"\n                        style={{ borderRadius: 10 }}\n                        name=\"nomorRekening\"\n                        value={values.nomorRekening}\n                        onChange={handleChange}\n                      />\n                      <Typography.Text>Nama</Typography.Text>\n                      <Input\n                        placeholder=\"Input Nama Pemilik Rekening\"\n                        className=\"mt-2\"\n                        style={{ borderRadius: 10 }}\n                        name=\"name\"\n                        value={values.name}\n                        onChange={handleChange}\n                      />\n                      <Upload\n                        accept=\"image/png, image/jpeg\"\n                        {...props}\n                        name=\"image\"\n                        onChange={(e) => {\n                          setFieldValue('image', e.file)\n                        }}\n                        className=\"mt-2\"\n                        style={{ borderRadius: 10 }}\n                        maxCount={1}\n                        type=\"select\"\n                      >\n                        <Button\n                          style={{ borderRadius: 20 }}\n                          className=\"mt-3\"\n                          icon={<UploadOutlined />}\n                        >\n                          Click to Upload Image\n                        </Button>\n                      </Upload>\n                      <Row justify=\"center\" className=\"mt-2\">\n                        <Col>\n                          <Button\n                            type=\"primary\"\n                            style={{ borderRadius: 10, width: 450 }}\n                            onClick={handleSubmit}\n                          >\n                            Submit\n                          </Button>\n                        </Col>\n                      </Row>\n                    </>\n                  )\n                }}\n              </Formik>\n            </Modal>\n          </Col>\n          <SearchBar />\n        </Row>\n        <Table\n          dataSource={data}\n          columns={columns}\n          bordered={true}\n          onChange={onChange}\n          pagination={{\n            pageSize: 5,\n            total: dataBank.length,\n          }}\n        />\n      </Card>\n    </>\n  )\n}\n","/home/rizkyian78/latihan-fullstack/src/pages/Admin/Booking.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/BookingTable.jsx",["295"],"import React from 'react'\nimport { Table, Button, Col, Typography, Card, Row, Tooltip } from 'antd'\nimport { withRouter } from 'react-router-dom'\nimport { changedColorStatus } from 'Options/statusChanged'\nimport axios from 'axios'\nimport SearchBar from './SearchBar'\nimport moment from 'moment'\n\nimport 'antd/dist/antd.css'\n\nfunction BookingTable(props) {\n  const [data, setData] = React.useState([])\n  React.useEffect(() => {\n    axios.get('http://localhost:8090/v1/booking').then((res) => {\n      setData(res.data.data)\n    })\n  }, [axios])\n  const columns = [\n    {\n      title: 'No',\n      dataIndex: 'invoice',\n      onFilter: (value, record) => record.name.indexOf(value) === 0,\n      sorter: (a, b) => a.name.length - b.name.length,\n      sortDirections: ['descend'],\n    },\n    {\n      title: 'Date',\n      render: (value) => (\n        <Typography>{`${moment(value.bookingStartDate)\n          .locale('id')\n          .format('ll')} s/d ${moment(value.bookingEndDate)\n          .locale('id')\n          .format('ll')}`}</Typography>\n      ),\n    },\n    {\n      title: 'Title',\n      dataIndex: 'itemId',\n      render: (value) => <Typography>{value.title}</Typography>,\n    },\n    {\n      title: 'Name Member',\n      dataIndex: 'memberId',\n      defaultSortOrder: 'descend',\n      render: (value) => (\n        <Typography>\n          {value.firstName} {value.lastName}\n        </Typography>\n      ),\n    },\n    {\n      title: 'Name Bank',\n      dataIndex: 'payment',\n      render: (value) => <Typography>{value.bankFrom}</Typography>,\n    },\n    {\n      title: 'Status',\n      dataIndex: 'payment',\n      render: (value) => (\n        <Typography.Text style={{ color: changedColorStatus[value.status] }}>\n          {value.status}\n        </Typography.Text>\n      ),\n    },\n    {\n      title: 'Action',\n      render: (value) => {\n        return (\n          <Row gutter={[6]} justify=\"space-around\">\n            <Col>\n              <Tooltip placement=\"rightTop\">\n                <Button\n                  style={{ borderRadius: 20 }}\n                  onClick={() =>\n                    console.log(\n                      props.history.push(`/admin/booking/${value._id}`),\n                    )\n                  }\n                >\n                  View\n                </Button>\n              </Tooltip>\n            </Col>\n          </Row>\n        )\n      },\n    },\n  ]\n  return (\n    <>\n      <Card className=\"shadow mt-3\" style={{ borderRadius: 30 }}>\n        <Typography.Title level={2}>Booking</Typography.Title>\n        <Row justify=\"space-between\" gutter={[16, 8]}>\n          <SearchBar />\n        </Row>\n        <Table columns={columns} dataSource={data} />\n      </Card>\n    </>\n  )\n}\n\nexport default withRouter(BookingTable)\n","/home/rizkyian78/latihan-fullstack/src/MasterValidation/mvBank.js",["296"],"import * as Yup from 'yup'\n\nconst category = Yup.object().shape({\n  name: Yup.string().required('Mohon untuk isi nama'),\n})\nconst item = Yup.object().shape({\n  title: Yup.string().required('Mohon untuk isi Title'),\n  price: Yup.number().required('Mohon untuk isi Harga'),\n  city: Yup.string().required('Mohon untuk isi Kota'),\n  description: Yup.string().required('Mohon untuk isi Deskripsi'),\n})\n\nexport default {\n  category,\n  item,\n}\n","/home/rizkyian78/latihan-fullstack/src/parts/FeatureAndActivityTable.jsx",["297","298","299","300"],"import React from 'react'\nimport {\n  Table,\n  Row,\n  Col,\n  Tooltip,\n  Button,\n  Popconfirm,\n  Card,\n  Typography,\n  Input,\n  Upload,\n  Tabs,\n  notification,\n  Image,\n  Modal,\n  Menu,\n  Dropdown,\n} from 'antd'\nimport SearchBar from './SearchBar'\nimport UploadOutlined from '@ant-design/icons/UploadOutlined'\nimport { Formik } from 'formik'\nimport 'antd/dist/antd.css'\nimport axios from 'axios'\nimport schema from 'MasterValidation/mvFeature'\n\nimport './CategoryTable.scss'\nimport 'assets/antd.scss'\n\nconst { TabPane } = Tabs\n\nexport default function FeatureAndActivity(props) {\n  const [size, setSize] = React.useState('small')\n  const [dataFeature, setDataFeature] = React.useState([])\n  const [initialValues, setInitialValues] = React.useState({\n    id: '',\n    name: '',\n    qty: 0,\n    imageUrl: {},\n  })\n  const [isModalShow, setIsModalShow] = React.useState(false)\n\n  React.useEffect(() => {\n    axios.get('http://localhost:8090/v1/feature').then((res) => {\n      setDataFeature(res.data.data)\n    })\n  }, [axios])\n  const columnsFeature = [\n    {\n      title: 'No',\n      width: 20,\n      dataIndex: 'nomor',\n      onFilter: (value, record) => record.name.indexOf(value) === 0,\n      sorter: (a, b) => a.name.length - b.name.length,\n      sortDirections: ['descend'],\n    },\n    {\n      title: 'Title',\n      dataIndex: 'name',\n      defaultSortOrder: 'descend',\n      sorter: (a, b) => a.age - b.age,\n    },\n    {\n      title: 'QTY',\n      dataIndex: 'qty',\n      defaultSortOrder: 'descend',\n      sorter: (a, b) => a.age - b.age,\n    },\n    {\n      title: 'Image URL',\n      dataIndex: 'imageUrl',\n      width: 200,\n      render: (path) => {\n        return (\n          <Card style={{ borderRadius: 20 }}>\n            <Image\n              width={200}\n              height={100}\n              src={\n                path\n                  ? `http://localhost:8090/${path}`\n                  : 'https://www.generationsforpeace.org/wp-content/uploads/2018/03/empty.jpg'\n              }\n            />\n          </Card>\n        )\n      },\n    },\n    {\n      title: 'Action',\n      width: 200,\n      render: (value) => {\n        return (\n          <Row gutter={[2]} justify=\"space-around\">\n            <Col>\n              <Tooltip placement=\"rightTop\">\n                <Button\n                  style={{ borderRadius: 20 }}\n                  onClick={() => showModal(value)}\n                >\n                  Edit\n                </Button>\n              </Tooltip>\n            </Col>\n            <Col>\n              <Popconfirm\n                title=\"Are you sure to delete this task?\"\n                // onConfirm={() => handleDelete(value)}\n                // onCancel={cancel}\n                okText=\"Yes\"\n                cancelText=\"No\"\n                placement=\"left\"\n                onConfirm={() => handleDelete(value)}\n              >\n                <Tooltip placement=\"rightTop\">\n                  <Button style={{ borderRadius: 20 }}>Delete</Button>\n                </Tooltip>\n              </Popconfirm>\n            </Col>\n          </Row>\n        )\n      },\n    },\n  ]\n  const columnsActivity = [\n    {\n      title: 'No',\n      width: 200,\n      dataIndex: 'nomor',\n      onFilter: (value, record) => record.name.indexOf(value) === 0,\n      sorter: (a, b) => a.name.length - b.name.length,\n      sortDirections: ['descend'],\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      defaultSortOrder: 'descend',\n      sorter: (a, b) => a.age - b.age,\n    },\n    {\n      title: 'Type',\n      dataIndex: 'name',\n      defaultSortOrder: 'descend',\n      sorter: (a, b) => a.age - b.age,\n    },\n    {\n      title: 'Image URL',\n      dataIndex: 'name',\n      defaultSortOrder: 'descend',\n      sorter: (a, b) => a.age - b.age,\n    },\n    {\n      title: 'Action',\n      width: 200,\n      render: (value) => {\n        return (\n          <Row gutter={[2]} justify=\"space-around\">\n            <Col>\n              <Tooltip placement=\"rightTop\">\n                <Button style={{ borderRadius: 20 }}>Edit</Button>\n              </Tooltip>\n            </Col>\n            <Col>\n              <Popconfirm\n                title=\"Are you sure to delete this task?\"\n                // onConfirm={() => handleDelete(value)}\n                // onCancel={cancel}\n                okText=\"Yes\"\n                cancelText=\"No\"\n                placement=\"left\"\n              >\n                <Tooltip placement=\"rightTop\">\n                  <Button style={{ borderRadius: 20 }}>Delete</Button>\n                </Tooltip>\n              </Popconfirm>\n            </Col>\n          </Row>\n        )\n      },\n    },\n  ]\n  const showModal = (value) => {\n    setInitialValues(value)\n    setIsModalShow(true)\n  }\n  const handleCancel = (e) => {\n    setIsModalShow(false)\n  }\n  const handleAdd = (data) => {\n    axios\n      .post(`http://localhost:8090/v1/feature`, data)\n      .then((res) => {\n        notification.success({\n          message: 'Berhasil Menambah Data',\n          duration: 2.5,\n        })\n        axios.get('http://localhost:8090/v1/feature').then((res) => {\n          setDataFeature(res.data.data)\n        })\n      })\n      .catch((err) => {\n        notification.error({\n          message: 'Gagal Menambah Data',\n          description: 'Mohon Cek Kembali Data',\n          duration: 2.5,\n        })\n      })\n  }\n\n  const handleDelete = (data) => {\n    axios\n      .delete(`http://localhost:8090/v1/feature/${data._id}`)\n      .then((res) => {\n        notification.success({\n          message: 'Berhasil Menghapus Data',\n          duration: 2.5,\n        })\n        axios.get('http://localhost:8090/v1/feature').then((res) => {\n          setDataFeature(res.data.data)\n        })\n      })\n      .catch((err) => {\n        notification.error({\n          message: 'Gagal Menghapus Data',\n          duration: 2.5,\n        })\n      })\n  }\n  return (\n    <>\n      <Card className=\"shadow mt-3\" style={{ borderRadius: 30 }}>\n        <Typography.Title level={2}>Detail Item</Typography.Title>\n        <Tabs defaultActiveKey=\"1\" size={size} style={{ marginBottom: 32 }}>\n          <TabPane tab=\"Show Feature\" key=\"1\">\n            <Formik\n              initialValues={initialValues}\n              validationSchema={schema.create}\n              onSubmit={(values, actions) => {\n                const formData = new FormData()\n                for (const [key, value] of Object.entries(values)) {\n                  if (key === 'imageUrl') {\n                    formData.append('imageUrl', value.originFileObj)\n                  } else {\n                    formData.append(key, value)\n                  }\n                }\n                handleAdd(formData)\n              }}\n            >\n              {({\n                values,\n                handleSubmit,\n                handleChange,\n                errors,\n                touched,\n                setFieldValue,\n              }) => {\n                return (\n                  <Row>\n                    <Col span={6}>\n                      <Col>\n                        <Typography.Text>Name</Typography.Text>\n                        <Input\n                          placeholder=\"Enter Name\"\n                          name=\"name\"\n                          value={values.name}\n                          onChange={handleChange}\n                          style={{ borderRadius: 10 }}\n                        />\n                        {touched.name && (\n                          <p className=\"bounce\" style={{ color: 'red' }}>\n                            {errors.name}\n                          </p>\n                        )}\n                      </Col>\n\n                      <Col span={12}>\n                        <Typography.Text>Quantity</Typography.Text>\n                        <Input\n                          type=\"number\"\n                          size=\"large\"\n                          placeholder=\"0\"\n                          name=\"qty\"\n                          onChange={handleChange}\n                          style={{ borderRadius: 10 }}\n                        />\n                        {touched.qty && (\n                          <p className=\"bounce\" style={{ color: 'red' }}>\n                            {errors.qty}\n                          </p>\n                        )}\n                      </Col>\n                      <Upload\n                        {...props}\n                        accept=\"image/png, image/jpeg\"\n                        name=\"imageUrl\"\n                        onChange={(e) => {\n                          setFieldValue('imageUrl', e.file)\n                        }}\n                      >\n                        <Col className=\"mt-3\"></Col>\n                        <Button icon={<UploadOutlined />}>\n                          Click to Upload Image\n                        </Button>\n                      </Upload>\n                      <Button\n                        className=\"mt-3\"\n                        type=\"primary\"\n                        // disabled={touched.name && touched.qty ? true : false}\n                        style={{ borderRadius: 10, width: 200 }}\n                        onClick={handleSubmit}\n                      >\n                        Save\n                      </Button>\n                    </Col>\n                    <Col span={18}>\n                      <Row justify=\"end\">\n                        <SearchBar />\n                      </Row>\n                      <Table\n                        columns={columnsFeature}\n                        dataSource={dataFeature}\n                      />\n                    </Col>\n                  </Row>\n                )\n              }}\n            </Formik>\n          </TabPane>\n          <TabPane tab=\"Show Activity\" key=\"2\">\n            <Row>\n              <Col span={10}>\n                <Col span={20}>\n                  <Typography.Text>Name</Typography.Text>\n                  <Input\n                    placeholder=\"Input Nama Category\"\n                    className=\"mt-3 mb-3\"\n                    style={{ borderRadius: 10 }}\n                  />\n                </Col>\n                <Col span={20}>\n                  <Typography.Text>Type</Typography.Text>\n                  <Input\n                    placeholder=\"Input Nama Category\"\n                    className=\"mt-3\"\n                    style={{ borderRadius: 10 }}\n                  />\n                </Col>\n                <Upload {...props}>\n                  <Button icon={<UploadOutlined />}>\n                    Click to Upload Image\n                  </Button>\n                </Upload>\n                <Button className=\"mt-3\" type=\"primary\">\n                  Save\n                </Button>\n              </Col>\n              <Col span={14}>\n                <Row justify=\"end\">\n                  <SearchBar />\n                  <Table columns={columnsActivity} className=\"mt-2\" />\n                </Row>\n              </Col>\n            </Row>\n          </TabPane>\n        </Tabs>\n        <Modal\n          className=\"mbut\"\n          bodyStyle={{ fontWeight: 'bolder' }}\n          footer={null}\n          title={'Edit'}\n          visible={isModalShow}\n          onCancel={handleCancel}\n        >\n          <Formik\n            initialValues={initialValues}\n            enableReinitialize\n            validationSchema={schema.create}\n            onSubmit={(values, actions) => {\n              console.log(values, actions)\n            }}\n          >\n            {({ values, handleChange, setFieldValue, handleSubmit }) => {\n              return (\n                <>\n                  <Typography.Text style={{ fontWeight: 'bolder' }}>\n                    Name\n                  </Typography.Text>\n                  <Input\n                    placeholder=\"Enter Name\"\n                    className=\"mb-3\"\n                    name=\"name\"\n                    value={values.name}\n                    onChange={handleChange}\n                    style={{ borderRadius: 10 }}\n                  />\n                  <Typography.Text style={{ fontWeight: 'bolder' }}>\n                    Quantity\n                  </Typography.Text>\n                  <br></br>\n                  <Input\n                    type=\"number\"\n                    onChange={handleChange}\n                    placeholder=\"Enter Quantity\"\n                    size=\"large\"\n                    className=\"mb-3\"\n                    name=\"qty\"\n                    value={values.qty}\n                    style={{ borderRadius: 10, width: 300 }}\n                  />\n                  <Upload\n                    {...props}\n                    name=\"imageUrl\"\n                    accept=\"image/png, image/jpeg\"\n                    onChange={(e) => {\n                      setFieldValue('imageUrl', e.file)\n                    }}\n                  >\n                    <Button icon={<UploadOutlined />}>\n                      Click to Upload Image\n                    </Button>\n                  </Upload>\n                  <Button\n                    className=\"mt-3\"\n                    type=\"primary\"\n                    onSubmit={handleSubmit}\n                    style={{ borderRadius: 10, width: 470 }}\n                  >\n                    Update\n                  </Button>\n                </>\n              )\n            }}\n          </Formik>\n        </Modal>\n      </Card>\n    </>\n  )\n}\n","/home/rizkyian78/latihan-fullstack/src/pages/Admin/FeatureAndActivity.jsx",[],"/home/rizkyian78/latihan-fullstack/src/pages/Admin/Item.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/ItemTable.jsx",["301","302","303"],"import React from 'react'\nimport {\n  Table,\n  Row,\n  Col,\n  Tooltip,\n  Button,\n  Popconfirm,\n  Card,\n  Typography,\n  Input,\n  Upload,\n  Tabs,\n  Select,\n  message,\n  notification,\n} from 'antd'\nimport SearchBar from './SearchBar'\nimport { UploadOutlined } from '@ant-design/icons'\nimport axios from 'axios'\nimport { numberFormat } from 'helper/Common'\nimport { Formik } from 'formik'\nimport { isArray } from 'lodash'\nimport schema from 'MasterValidation/mvBank'\n\nimport 'antd/dist/antd.css'\nimport { withRouter } from 'react-router-dom'\nconst { TabPane } = Tabs\n\nfunction ItemTable(props) {\n  const [dataItem, setDataItem] = React.useState('')\n  const [dataCategory, setDataCategory] = React.useState([])\n  const [tabs, setTabs] = React.useState('1')\n  const [initialValues, setInitialValues] = React.useState({\n    id: '',\n    title: '',\n    price: '',\n    city: '',\n    categoryId: {\n      id: '',\n      name: '',\n    },\n    images: [],\n    description: '',\n  })\n\n  React.useEffect(() => {\n    axios\n      .get('http://localhost:8090/v1/item')\n      .then((res) => {\n        setDataItem(res.data.data)\n      })\n      .catch((err) => console.log(err))\n    axios\n      .get('http://localhost:8090/v1/category')\n      .then((res) => {\n        setDataCategory(res.data.data)\n      })\n      .catch((err) => console.log(err))\n  }, [axios])\n\n  const columns = [\n    {\n      title: 'No',\n      width: 200,\n      dataIndex: 'nomor',\n      onFilter: (value, record) => record.name.indexOf(value) === 0,\n      sorter: (a, b) => a.name.length - b.name.length,\n      sortDirections: ['descend'],\n    },\n    {\n      title: 'Title',\n      dataIndex: 'title',\n      defaultSortOrder: 'descend',\n      sorter: (a, b) => a.age - b.age,\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      render: (value) => {\n        return <Typography>Rp {numberFormat(value)}</Typography>\n      },\n    },\n    {\n      title: 'Country',\n      dataIndex: 'country',\n      defaultSortOrder: 'descend',\n      sorter: (a, b) => a.age - b.age,\n    },\n    {\n      title: 'City',\n      dataIndex: 'city',\n      defaultSortOrder: 'descend',\n      sorter: (a, b) => a.age - b.age,\n    },\n    {\n      title: 'Action',\n      width: 300,\n      render: (value) => {\n        return (\n          <Row gutter={[2]} justify=\"space-around\">\n            <Col>\n              <Tooltip placement=\"rightTop\">\n                <Button\n                  style={{ borderRadius: 20 }}\n                  onClick={() => showModal(value)}\n                >\n                  Edit\n                </Button>\n              </Tooltip>\n            </Col>\n            <Col>\n              <Tooltip placement=\"rightTop\">\n                <Button\n                  style={{ borderRadius: 20 }}\n                  onClick={() => showImage(value)}\n                >\n                  Image\n                </Button>\n              </Tooltip>\n            </Col>\n            <Col>\n              <Tooltip placement=\"rightTop\">\n                <Button\n                  style={{ borderRadius: 20 }}\n                  onClick={() => setTabs('2')}\n                >\n                  Add\n                </Button>\n              </Tooltip>\n            </Col>\n            <Col>\n              <Popconfirm\n                title=\"Are you sure to delete this task?\"\n                onConfirm={() => handleDelete(value)}\n                // onCancel={cancel}\n                okText=\"Yes\"\n                cancelText=\"No\"\n                placement=\"left\"\n              >\n                <Tooltip placement=\"rightTop\">\n                  <Button style={{ borderRadius: 20 }}>Delete</Button>\n                </Tooltip>\n              </Popconfirm>\n            </Col>\n          </Row>\n        )\n      },\n    },\n  ]\n  const data = []\n  for (let i = 0; i < dataItem.length; i++) {\n    data.push({\n      id: dataItem[i]._id,\n      nomor: i + 1,\n      title: dataItem[i].title,\n      price: dataItem[i].price,\n      country: dataItem[i].country,\n      city: dataItem[i].city,\n      categoryId: dataItem[i].categoryId,\n      description: dataItem[i].description,\n    })\n  }\n  const showModal = (data) => {\n    setTabs('3')\n    setInitialValues({ ...data })\n  }\n  const showImage = (data) => {\n    props.history.push(`/admin/item/image/${data.id}`)\n  }\n  const handleAdd = (data) => {\n    console.log(data)\n    axios\n      .post(`http://localhost:8090/v1/item`, data)\n      .then((res) => {\n        setTabs('1')\n        axios.get('http://localhost:8090/v1/item').then((res) => {\n          message.success('Berhasil Menambah Data')\n          setDataItem(res.data.data)\n          setTabs('1')\n        })\n      })\n      .catch((err) => {\n        message.error('Harap Masukkan nama')\n      })\n  }\n  function handleEdit(id, formData) {\n    axios\n      .put(`http://localhost:8090/v1/item/${id}`, formData)\n      .then((res) => {\n        axios\n          .get('http://localhost:8090/v1/item')\n          .then((res) => {\n            message.success('Data Berhasil Diubah')\n            setDataItem(res.data.data)\n          })\n          .catch((err) => console.log(err))\n      })\n      .catch((err) => notification.error(err.message))\n  }\n\n  function handleDelete(data) {\n    axios.delete(`http://localhost:8090/v1/item/${data._id}`).then((res) => {\n      axios\n        .get('http://localhost:8090/v1/item')\n        .then((res) => {\n          setDataItem(res.data.data)\n        })\n        .catch((err) => message.error('Blok'))\n    })\n    message.success('Data berhasil Di Delete')\n  }\n  return (\n    <>\n      <Card className=\"shadow mt-3\" style={{ borderRadius: 30 }}>\n        <Typography.Title level={2}>Detail Item</Typography.Title>\n        <Tabs\n          tabBarGutter={6}\n          size=\"middle\"\n          style={{ marginBottom: 32 }}\n          type=\"card\"\n          defaultActiveKey=\"1\"\n          activeKey={tabs}\n        >\n          <TabPane tab=\"Show Item\" key=\"1\">\n            <SearchBar />\n            <Table dataSource={data} columns={columns} className=\"mt-2\" />\n          </TabPane>\n          <TabPane tab=\"Edit Item\" key=\"3\" disabled>\n            <Formik\n              initialValues={initialValues}\n              validationSchema={schema.item}\n              onSubmit={(values, actions) => {\n                const formData = new FormData()\n                for (const [key, value] of Object.entries(values)) {\n                  if (key === 'categoryId') {\n                    formData.append('categoryId', value._id)\n                  }\n                  if (key === 'images') {\n                    value.map((x) => {\n                      formData.append('images', x.originFileObj)\n                    })\n                  }\n                  formData.append(key, value)\n                }\n                handleEdit(values.id, formData)\n              }}\n            >\n              {({\n                values,\n                handleChange,\n                handleSubmit,\n                setFieldValue,\n                errors,\n                touched,\n              }) => {\n                return (\n                  <>\n                    <Col span={20}>\n                      <Typography.Text>\n                        Title<span style={{ color: 'red' }}>*</span>\n                      </Typography.Text>\n                      <Input\n                        placeholder=\"Input Title\"\n                        className=\"mt-2\"\n                        onChange={handleChange}\n                        name=\"title\"\n                        value={values.title}\n                        style={{ borderRadius: 10 }}\n                      />\n                      {touched.title && (\n                        <p className=\"bounce\" style={{ color: 'red' }}>\n                          {errors.title}\n                        </p>\n                      )}\n                    </Col>\n                    <Col span={20}>\n                      <Typography.Text>\n                        Price<span style={{ color: 'red' }}>*</span>\n                      </Typography.Text>\n                      <Input\n                        placeholder=\"Input Harga\"\n                        className=\"mt-2\"\n                        type=\"number\"\n                        value={values.price}\n                        onChange={handleChange}\n                        name=\"price\"\n                        style={{ borderRadius: 10 }}\n                      />\n                      {touched.price && (\n                        <p className=\"bounce\" style={{ color: 'red' }}>\n                          {errors.price}\n                        </p>\n                      )}\n                    </Col>\n                    <Col span={20}>\n                      <Typography.Text>\n                        City<span style={{ color: 'red' }}>*</span>\n                      </Typography.Text>\n                      <Input\n                        placeholder=\"Input Nama Kota\"\n                        onChange={handleChange}\n                        name=\"city\"\n                        value={values.city}\n                        className=\"mt-2\"\n                        style={{ borderRadius: 10 }}\n                      />\n                      {touched.city && (\n                        <p className=\"bounce\" style={{ color: 'red' }}>\n                          {errors.city}\n                        </p>\n                      )}\n                    </Col>\n                    <Col span={20}>\n                      <Typography.Text>\n                        Category<span style={{ color: 'red' }}>*</span>\n                      </Typography.Text>\n                      <Col>\n                        <Select\n                          showSearch\n                          allowClear\n                          style={{ width: 500 }}\n                          placeholder=\"Select a Category\"\n                          value={values.categoryId.name}\n                          optionFilterProp=\"children\"\n                          filterOption={(input, option) =>\n                            option.children\n                              .toLowerCase()\n                              .indexOf(input.toLowerCase()) >= 0\n                          }\n                          onChange={(values) =>\n                            setFieldValue('categoryId', values)\n                          }\n                        >\n                          {dataCategory.map((item) => {\n                            return (\n                              <Select.Option key={item._id}>\n                                {item.name}\n                              </Select.Option>\n                            )\n                          })}\n                        </Select>\n                        {touched.categoryId && (\n                          <p className=\"bounce\" style={{ color: 'red' }}>\n                            {errors.categoryId}\n                          </p>\n                        )}\n                      </Col>\n                    </Col>\n                    <Upload\n                      {...props}\n                      beforeUpload={(file, fileList) => {\n                        const fileSize = file.size / 1024 / 1024\n                        if (fileSize > 2) {\n                          throw notification.error({\n                            message: 'Image must smaller than 2MB!',\n                            description:\n                              'Mohon file yang di upload kurang dari 2MB',\n                          })\n                        }\n                      }}\n                      multiple\n                      accept=\"image/png, image/jpeg\"\n                      onChange={(values) => {\n                        setFieldValue('images', values.fileList)\n                      }}\n                    >\n                      <Col className=\"mt-3\">\n                        <Typography.Text>\n                          Image<span style={{ color: 'red' }}>*</span>\n                        </Typography.Text>\n                      </Col>\n                      <Button icon={<UploadOutlined />}>\n                        Click to Upload Image\n                      </Button>\n                    </Upload>\n                    <Col span={20} className=\"mt-3\">\n                      <Typography.Text>\n                        Description<span style={{ color: 'red' }}>*</span>\n                      </Typography.Text>\n                      <Input.TextArea\n                        placeholder=\"Input Deskripsi\"\n                        className=\"mt-2\"\n                        type=\"text\"\n                        name=\"description\"\n                        value={values.description}\n                        onChange={handleChange}\n                        style={{ borderRadius: 10, height: 100 }}\n                      />\n                      {touched.description && (\n                        <p className=\"bounce\" style={{ color: 'red' }}>\n                          {errors.description}\n                        </p>\n                      )}\n                    </Col>\n                    <Row justify=\"space-between\">\n                      <Button\n                        className=\"mt-3\"\n                        type=\"primary\"\n                        style={{ borderRadius: 10, width: 300 }}\n                        onClick={handleSubmit}\n                      >\n                        Submit\n                      </Button>\n                      <Button\n                        className=\"mt-3\"\n                        type=\"primary\"\n                        style={{ borderRadius: 10, width: 300 }}\n                        onClick={() => setTabs('1')}\n                      >\n                        Back\n                      </Button>\n                    </Row>\n                    <Col className=\"mt-3\">\n                      <span style={{ color: 'red' }}>*</span> Required\n                    </Col>\n                  </>\n                )\n              }}\n            </Formik>\n          </TabPane>\n          <TabPane tab={'Add Item'} key=\"2\">\n            <Formik\n              initialValues={initialValues}\n              validationSchema={schema.item}\n              onSubmit={(values, actions) => {\n                const formData = new FormData()\n                for (const [key, value] of Object.entries(values)) {\n                  if (isArray(value) && key === 'images') {\n                    value.map((item) => {\n                      formData.append(key, item.originFileObj)\n                    })\n                  }\n                  formData.append(key, value)\n                }\n                handleAdd(formData)\n                setTabs('1')\n              }}\n            >\n              {({\n                values,\n                handleChange,\n                handleSubmit,\n                setFieldValue,\n                errors,\n                touched,\n              }) => {\n                return (\n                  <>\n                    <Col span={20}>\n                      <Typography.Text>\n                        Title<span style={{ color: 'red' }}>*</span>\n                      </Typography.Text>\n                      <Input\n                        placeholder=\"Input Title\"\n                        className=\"mt-2\"\n                        onChange={handleChange}\n                        name=\"title\"\n                        style={{ borderRadius: 10 }}\n                      />\n                      {touched.title && (\n                        <p className=\"bounce\" style={{ color: 'red' }}>\n                          {errors.title}\n                        </p>\n                      )}\n                    </Col>\n                    <Col span={20}>\n                      <Typography.Text>\n                        Price<span style={{ color: 'red' }}>*</span>\n                      </Typography.Text>\n                      <Input\n                        placeholder=\"Input Harga\"\n                        className=\"mt-2\"\n                        type=\"number\"\n                        onChange={handleChange}\n                        name=\"price\"\n                        style={{ borderRadius: 10 }}\n                      />\n                      {touched.price && (\n                        <p className=\"bounce\" style={{ color: 'red' }}>\n                          {errors.price}\n                        </p>\n                      )}\n                    </Col>\n                    <Col span={20}>\n                      <Typography.Text>\n                        City<span style={{ color: 'red' }}>*</span>\n                      </Typography.Text>\n                      <Input\n                        placeholder=\"Input Nama Kota\"\n                        onChange={handleChange}\n                        name=\"city\"\n                        className=\"mt-2\"\n                        style={{ borderRadius: 10 }}\n                      />\n                      {touched.city && (\n                        <p className=\"bounce\" style={{ color: 'red' }}>\n                          {errors.city}\n                        </p>\n                      )}\n                    </Col>\n                    <Col span={20}>\n                      <Typography.Text>\n                        Category<span style={{ color: 'red' }}>*</span>\n                      </Typography.Text>\n                      <Col>\n                        <Select\n                          showSearch\n                          allowClear\n                          style={{ width: 500 }}\n                          placeholder=\"Select a Category\"\n                          value={values.categoryId.name}\n                          optionFilterProp=\"children\"\n                          filterOption={(input, option) =>\n                            option.children\n                              .toLowerCase()\n                              .indexOf(input.toLowerCase()) >= 0\n                          }\n                          onChange={(values) =>\n                            setFieldValue('categoryId', values)\n                          }\n                        >\n                          {dataCategory.map((item) => {\n                            return (\n                              <Select.Option key={item._id}>\n                                {item.name}\n                              </Select.Option>\n                            )\n                          })}\n                        </Select>\n                        {touched.categoryId && (\n                          <p className=\"bounce\" style={{ color: 'red' }}>\n                            {errors.categoryId}\n                          </p>\n                        )}\n                      </Col>\n                    </Col>\n                    <Upload\n                      {...props}\n                      multiple\n                      accept=\"image/png, image/jpeg\"\n                      onChange={(values) => {\n                        setFieldValue('images', values.fileList)\n                      }}\n                    >\n                      <Col className=\"mt-3\">\n                        <Typography.Text>\n                          Image<span style={{ color: 'red' }}>*</span>\n                        </Typography.Text>\n                      </Col>\n                      <Button icon={<UploadOutlined />}>\n                        Click to Upload Image\n                      </Button>\n                    </Upload>\n                    <Col span={20} className=\"mt-3\">\n                      <Typography.Text>\n                        Description<span style={{ color: 'red' }}>*</span>\n                      </Typography.Text>\n                      <Input.TextArea\n                        placeholder=\"Input Deskripsi\"\n                        className=\"mt-2\"\n                        type=\"text\"\n                        name=\"description\"\n                        onChange={handleChange}\n                        style={{ borderRadius: 10, height: 100 }}\n                      />\n                      {touched.description && (\n                        <p className=\"bounce\" style={{ color: 'red' }}>\n                          {errors.description}\n                        </p>\n                      )}\n                    </Col>\n                    <Row justify=\"space-between\">\n                      <Button\n                        className=\"mt-3\"\n                        type=\"primary\"\n                        style={{ borderRadius: 10, width: 300 }}\n                        onClick={handleSubmit}\n                      >\n                        Submit\n                      </Button>\n                      <Button\n                        className=\"mt-3\"\n                        type=\"primary\"\n                        style={{ borderRadius: 10, width: 300 }}\n                        onClick={() => setTabs('1')}\n                      >\n                        Back\n                      </Button>\n                    </Row>\n                    <Col className=\"mt-3\">\n                      <span style={{ color: 'red' }}>*</span> Required\n                    </Col>\n                  </>\n                )\n              }}\n            </Formik>\n          </TabPane>\n        </Tabs>\n      </Card>\n    </>\n  )\n}\n\nexport default withRouter(ItemTable)\n","/home/rizkyian78/latihan-fullstack/src/pages/Admin/ShowImage.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/ShowImage.jsx",["304"],"import React, { useEffect } from 'react'\nimport { Image, message, Row, Col, Card, Button } from 'antd'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\n\nimport NavbarAdmin from 'parts/NavbarAdmin'\nimport SideBar from 'parts/Sidebar'\n\nimport 'antd/dist/antd.css'\n\nfunction ShowImage(props) {\n  const {\n    match: {\n      params: { id },\n    },\n  } = props\n  const [dataImage, setDataImage] = React.useState([])\n  useEffect(() => {\n    axios\n      .get(`http://localhost:8090/v1/item/${id}`)\n      .then((res) => {\n        setDataImage(res.data.data)\n      })\n      .catch((err) => message.error('ini error'))\n  }, [axios])\n  return (\n    <>\n      <NavbarAdmin />\n\n      <Row align=\"top\" gutter={12}>\n        <SideBar />\n        {dataImage.images ? (\n          dataImage.images.map((x, index) => {\n            if (index === 0) {\n            }\n            return (\n              <Col className=\"mt-3\">\n                <Card\n                  style={{\n                    borderRadius: 10,\n                    boxShadow: '2px 2px 4px #000000',\n                  }}\n                  hoverable\n                >\n                  <Image\n                    key={x._id}\n                    height={index === 1 ? 200 : 350}\n                    width={index === 1 ? 300 : 200}\n                    src={`http://localhost:8090/${x.imageUrl}`}\n                  />\n                </Card>\n              </Col>\n            )\n          })\n        ) : (\n          <p>Loading</p>\n        )}\n      </Row>\n      <Button onClick={() => props.history.push('/admin/item')}>Back</Button>\n    </>\n  )\n}\n\nexport default withRouter(ShowImage)\n","/home/rizkyian78/latihan-fullstack/src/MasterValidation/mvFeature.js",["305"],"import * as Yup from 'yup'\n\nconst create = Yup.object().shape({\n  name: Yup.string().required('Mohon untuk isi nama'),\n  qty: Yup.number()\n    .moreThan(0, 'Tidak boleh 0 atau negatif')\n    .required('Mohon untuk isi Quantity'),\n})\n\nexport default {\n  create,\n}\n","/home/rizkyian78/latihan-fullstack/src/MasterValidation/mvLogin.js",["306"],"import * as yup from 'yup'\n\nconst login = yup\n  .object()\n  .shape({\n    email: yup\n      .string()\n      .email('Email tidak valid')\n      .required('Email wajib diisi'),\n    password: yup\n      .string()\n      .min(8, 'Minimal 8 karakter')\n      .required('Password wajib diisi'),\n  })\n  .required()\n\nexport default {\n  login,\n}\n","/home/rizkyian78/latihan-fullstack/src/pages/test.jsx",["307","308","309","310","311"],"import React from 'react'\nimport { Input, Button, message, Upload, Image } from 'antd'\nimport axios from 'axios'\nimport io from 'socket.io-client'\nimport { Formik } from 'formik'\nimport { UploadOutlined } from '@ant-design/icons'\nimport moment from 'moment'\nimport 'antd/dist/antd.css'\n\nexport default function Test(props) {\n  const [initialValues, setInitialValues] = React.useState({\n    id: '',\n    context: '',\n    file: '',\n  })\n  const [showMessage, setShowMessage] = React.useState('')\n  const [lastMessage, setLastMessage] = React.useState('')\n\n  // React.useEffect(() => {\n  //   axios.get(`http://localhost:8010/v1/chat`).then((res) => {\n  //     setShowMessage(res.data.data)\n  //   })\n  // }, [axios, lastMessage])\n\n  // React.useEffect(() => {\n  //   const socket = io('http://localhost:8010/', {\n  //     secure: true,\n  //     transports: ['websocket'],\n  //     auth: {\n  //       token: '',\n  //     },\n  //     path: '/socket', // added this line of code\n  //   })\n  //   socket.on('message', (data) => {\n  //     setLastMessage(data)\n  //   })\n  //   return () => {\n  //     socket.removeListener('message')\n  //   }\n  // })\n\n  const handleAdd = (data) => {\n    delete data.id\n    axios.post(`http://localhost:8010/v1/chat`, data).catch((err) => {\n      message.error(err.response.data.message)\n    })\n  }\n  return (\n    <>\n      {showMessage &&\n        showMessage.map((x) => {\n          console.log(x)\n          return (\n            <div>\n              {x.context},{' '}\n              {moment(x.waktu).locale('en').startOf('second').fromNow()}\n              <Image\n                key={x._id}\n                height={50}\n                width={50}\n                src={`http://localhost:8010/${x.fileUser}`}\n              />\n            </div>\n          )\n        })}\n      <Formik\n        initialValues={initialValues}\n        onSubmit={(values, action) => {\n          const formData = new FormData()\n          for (const [key, value] of Object.entries(values)) {\n            if (key === 'file') {\n              formData.append('file', value.originFileObj)\n            }\n            formData.append(key, value)\n          }\n          handleAdd(formData)\n        }}\n      >\n        {({ values, handleChange, handleSubmit, setFieldValue }) => {\n          return (\n            <>\n              <Input\n                name=\"context\"\n                onChange={handleChange}\n                value={values.context}\n              />\n              <Upload\n                accept=\"image/png, image/jpeg\"\n                {...props}\n                name=\"file\"\n                onChange={(e) => {\n                  setFieldValue('file', e.file)\n                }}\n                className=\"mt-2\"\n                style={{ borderRadius: 10 }}\n                maxCount={1}\n                type=\"select\"\n              >\n                <Button\n                  style={{ borderRadius: 20 }}\n                  className=\"mt-3\"\n                  icon={<UploadOutlined />}\n                >\n                  Click to Upload Image\n                </Button>\n              </Upload>\n              <Button onClick={handleSubmit}>Oke</Button>\n            </>\n          )\n        }}\n      </Formik>\n    </>\n  )\n}\n","/home/rizkyian78/latihan-fullstack/src/assets/BallTriangle.jsx",[],"/home/rizkyian78/latihan-fullstack/src/pages/Admin/DetailBooking.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/DetailBooking.jsx",["312","313","314"],"/home/rizkyian78/latihan-fullstack/src/Options/statusChanged.js",[],{"ruleId":"315","replacedBy":"316"},{"ruleId":"317","replacedBy":"318"},{"ruleId":"319","severity":1,"message":"320","line":12,"column":9,"nodeType":"321","messageId":"322","endLine":12,"endColumn":17},{"ruleId":"319","severity":1,"message":"323","line":5,"column":8,"nodeType":"321","messageId":"322","endLine":5,"endColumn":20},{"ruleId":"324","severity":1,"message":"325","line":38,"column":9,"nodeType":"326","endLine":44,"endColumn":10},{"ruleId":"315","replacedBy":"327"},{"ruleId":"317","replacedBy":"328"},{"ruleId":"329","severity":1,"message":"330","line":11,"column":1,"nodeType":"331","endLine":13,"endColumn":2},{"ruleId":"319","severity":1,"message":"332","line":8,"column":5,"nodeType":"321","messageId":"322","endLine":8,"endColumn":10},{"ruleId":"319","severity":1,"message":"333","line":10,"column":5,"nodeType":"321","messageId":"322","endLine":10,"endColumn":16},{"ruleId":"319","severity":1,"message":"334","line":15,"column":5,"nodeType":"321","messageId":"322","endLine":15,"endColumn":19},{"ruleId":"319","severity":1,"message":"335","line":3,"column":8,"nodeType":"321","messageId":"322","endLine":3,"endColumn":14},{"ruleId":"319","severity":1,"message":"336","line":9,"column":8,"nodeType":"321","messageId":"322","endLine":9,"endColumn":12},{"ruleId":"319","severity":1,"message":"337","line":5,"column":17,"nodeType":"321","messageId":"322","endLine":5,"endColumn":21},{"ruleId":"319","severity":1,"message":"338","line":5,"column":23,"nodeType":"321","messageId":"322","endLine":5,"endColumn":31},{"ruleId":"319","severity":1,"message":"339","line":5,"column":33,"nodeType":"321","messageId":"322","endLine":5,"endColumn":39},{"ruleId":"340","severity":1,"message":"341","line":23,"column":17,"nodeType":"326","endLine":23,"endColumn":56},{"ruleId":"342","severity":1,"message":"343","line":23,"column":17,"nodeType":"326","endLine":23,"endColumn":56},{"ruleId":"344","severity":1,"message":"345","line":43,"column":6,"nodeType":"346","endLine":43,"endColumn":13,"suggestions":"347"},{"ruleId":"319","severity":1,"message":"348","line":2,"column":17,"nodeType":"321","messageId":"322","endLine":2,"endColumn":22},{"ruleId":"319","severity":1,"message":"349","line":2,"column":24,"nodeType":"321","messageId":"322","endLine":2,"endColumn":27},{"ruleId":"319","severity":1,"message":"350","line":3,"column":10,"nodeType":"321","messageId":"322","endLine":3,"endColumn":24},{"ruleId":"319","severity":1,"message":"351","line":9,"column":10,"nodeType":"321","messageId":"322","endLine":9,"endColumn":18},{"ruleId":"344","severity":1,"message":"345","line":107,"column":6,"nodeType":"346","endLine":107,"endColumn":13,"suggestions":"352"},{"ruleId":"344","severity":1,"message":"345","line":17,"column":6,"nodeType":"346","endLine":17,"endColumn":13,"suggestions":"353"},{"ruleId":"329","severity":1,"message":"330","line":13,"column":1,"nodeType":"331","endLine":16,"endColumn":2},{"ruleId":"319","severity":1,"message":"337","line":17,"column":3,"nodeType":"321","messageId":"322","endLine":17,"endColumn":7},{"ruleId":"319","severity":1,"message":"338","line":18,"column":3,"nodeType":"321","messageId":"322","endLine":18,"endColumn":11},{"ruleId":"319","severity":1,"message":"354","line":33,"column":16,"nodeType":"321","messageId":"322","endLine":33,"endColumn":23},{"ruleId":"344","severity":1,"message":"345","line":47,"column":6,"nodeType":"346","endLine":47,"endColumn":13,"suggestions":"355"},{"ruleId":"344","severity":1,"message":"345","line":60,"column":6,"nodeType":"346","endLine":60,"endColumn":13,"suggestions":"356"},{"ruleId":"357","severity":1,"message":"358","line":240,"column":35,"nodeType":"359","messageId":"360","endLine":240,"endColumn":37},{"ruleId":"357","severity":1,"message":"358","line":430,"column":38,"nodeType":"359","messageId":"360","endLine":430,"endColumn":40},{"ruleId":"344","severity":1,"message":"361","line":25,"column":6,"nodeType":"346","endLine":25,"endColumn":13,"suggestions":"362"},{"ruleId":"329","severity":1,"message":"330","line":10,"column":1,"nodeType":"331","endLine":12,"endColumn":2},{"ruleId":"329","severity":1,"message":"330","line":17,"column":1,"nodeType":"331","endLine":19,"endColumn":2},{"ruleId":"319","severity":1,"message":"363","line":4,"column":8,"nodeType":"321","messageId":"322","endLine":4,"endColumn":10},{"ruleId":"319","severity":1,"message":"364","line":11,"column":25,"nodeType":"321","messageId":"322","endLine":11,"endColumn":41},{"ruleId":"319","severity":1,"message":"365","line":16,"column":23,"nodeType":"321","messageId":"322","endLine":16,"endColumn":37},{"ruleId":"319","severity":1,"message":"366","line":17,"column":10,"nodeType":"321","messageId":"322","endLine":17,"endColumn":21},{"ruleId":"319","severity":1,"message":"367","line":17,"column":23,"nodeType":"321","messageId":"322","endLine":17,"endColumn":37},{"ruleId":"319","severity":1,"message":"368","line":34,"column":10,"nodeType":"321","messageId":"322","endLine":34,"endColumn":19},{"ruleId":"344","severity":1,"message":"369","line":75,"column":6,"nodeType":"346","endLine":75,"endColumn":27,"suggestions":"370"},{"ruleId":"371","severity":1,"message":"372","line":162,"column":15,"nodeType":"326","endLine":162,"endColumn":191},"no-native-reassign",["373"],"no-negated-in-lhs",["374"],"no-unused-vars","'darkMode' is assigned a value but never used.","Identifier","unusedVar","'BallTriangle' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement",["373"],["374"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'value' is assigned a value but never used.","'placeholder' is assigned a value but never used.","'inputClassName' is assigned a value but never used.","'schema' is defined but never used.","'Swal' is defined but never used.","'Menu' is defined but never used.","'Dropdown' is defined but never used.","'Button' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook React.useEffect has an unnecessary dependency: 'axios'. Either exclude it or remove the dependency array. Outer scope values like 'axios' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["375"],"'Space' is defined but never used.","'Row' is defined but never used.","'SearchOutlined' is defined but never used.","'category' is assigned a value but never used.",["376"],["377"],"'setSize' is assigned a value but never used.",["378"],["379"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array. Outer scope values like 'axios' aren't valid dependencies because mutating them doesn't re-render the component.",["380"],"'io' is defined but never used.","'setInitialValues' is assigned a value but never used.","'setShowMessage' is assigned a value but never used.","'lastMessage' is assigned a value but never used.","'setLastMessage' is assigned a value but never used.","'isLoading' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array. Outer scope values like 'axios' aren't valid dependencies because mutating them doesn't re-render the component.",["381"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"382","fix":"383"},{"desc":"382","fix":"384"},{"desc":"382","fix":"385"},{"desc":"382","fix":"386"},{"desc":"382","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},"Update the dependencies array to be: []",{"range":"392","text":"393"},{"range":"394","text":"393"},{"range":"395","text":"393"},{"range":"396","text":"393"},{"range":"397","text":"393"},"Update the dependencies array to be: [id]",{"range":"398","text":"399"},"Update the dependencies array to be: [props.match.params.id, updateStatus]",{"range":"400","text":"401"},[959,966],"[]",[2550,2557],[534,541],[1012,1019],[1326,1333],[636,643],"[id]",[1851,1872],"[props.match.params.id, updateStatus]"]