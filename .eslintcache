[{"/home/rizkyian78/latihan-fullstack/src/index.js":"1","/home/rizkyian78/latihan-fullstack/src/reportWebVitals.js":"2","/home/rizkyian78/latihan-fullstack/src/App.jsx":"3","/home/rizkyian78/latihan-fullstack/src/pages/LandingPage.jsx":"4","/home/rizkyian78/latihan-fullstack/src/parts/Header.jsx":"5","/home/rizkyian78/latihan-fullstack/src/parts/IconText.jsx":"6","/home/rizkyian78/latihan-fullstack/src/elements/Button/index.jsx":"7","/home/rizkyian78/latihan-fullstack/src/parts/Hero.jsx":"8","/home/rizkyian78/latihan-fullstack/src/helper/Common.js":"9","/home/rizkyian78/latihan-fullstack/src/parts/MostPicked.jsx":"10","/home/rizkyian78/latihan-fullstack/src/parts/Category.jsx":"11","/home/rizkyian78/latihan-fullstack/src/parts/Testimony.jsx":"12","/home/rizkyian78/latihan-fullstack/src/elements/Star/index.jsx":"13","/home/rizkyian78/latihan-fullstack/src/parts/Footer.jsx":"14","/home/rizkyian78/latihan-fullstack/src/elements/WhatsappButton/index.jsx":"15","/home/rizkyian78/latihan-fullstack/src/pages/Example.jsx":"16","/home/rizkyian78/latihan-fullstack/src/elements/Form/InputNumber/index.jsx":"17","/home/rizkyian78/latihan-fullstack/src/elements/Form/InputDate/index.jsx":"18","/home/rizkyian78/latihan-fullstack/src/elements/Form/BreadCrumbs/index.jsx":"19","/home/rizkyian78/latihan-fullstack/src/pages/DetailPage.jsx":"20","/home/rizkyian78/latihan-fullstack/src/parts/PageDetailTitle.jsx":"21","/home/rizkyian78/latihan-fullstack/src/parts/FeatureImage.jsx":"22","/home/rizkyian78/latihan-fullstack/src/parts/PageDetailDescription.jsx":"23","/home/rizkyian78/latihan-fullstack/src/parts/BookingForm.jsx":"24","/home/rizkyian78/latihan-fullstack/src/elements/Form/index.jsx":"25","/home/rizkyian78/latihan-fullstack/src/pages/CheckOut.jsx":"26","/home/rizkyian78/latihan-fullstack/src/helper/useValidate.js":"27","/home/rizkyian78/latihan-fullstack/src/elements/Form/InputText/schema.js":"28","/home/rizkyian78/latihan-fullstack/src/elements/Stepper/index.jsx":"29","/home/rizkyian78/latihan-fullstack/src/parts/CheckOut/BookingInformation.jsx":"30","/home/rizkyian78/latihan-fullstack/src/parts/CheckOut/Payment.jsx":"31","/home/rizkyian78/latihan-fullstack/src/parts/CheckOut/Complete.jsx":"32","/home/rizkyian78/latihan-fullstack/src/elements/Stepper/Controller/index.jsx":"33","/home/rizkyian78/latihan-fullstack/src/elements/Form/InputFile/index.jsx":"34","/home/rizkyian78/latihan-fullstack/src/elements/Form/InputText/index.jsx":"35","/home/rizkyian78/latihan-fullstack/src/elements/Stepper/Numbering/index.jsx":"36","/home/rizkyian78/latihan-fullstack/src/elements/Stepper/Meta/index.jsx":"37","/home/rizkyian78/latihan-fullstack/src/elements/Stepper/MainContent/index.jsx":"38","/home/rizkyian78/latihan-fullstack/src/pages/Login.jsx":"39","/home/rizkyian78/latihan-fullstack/src/pages/Admin/Category.jsx":"40","/home/rizkyian78/latihan-fullstack/src/parts/NavbarAdmin.jsx":"41","/home/rizkyian78/latihan-fullstack/src/parts/Sidebar.jsx":"42","/home/rizkyian78/latihan-fullstack/src/parts/CategoryTable.jsx":"43","/home/rizkyian78/latihan-fullstack/src/parts/SearchBar.jsx":"44","/home/rizkyian78/latihan-fullstack/src/pages/Admin/Bank.jsx":"45","/home/rizkyian78/latihan-fullstack/src/parts/BankTable.jsx":"46","/home/rizkyian78/latihan-fullstack/src/pages/Admin/Booking.jsx":"47","/home/rizkyian78/latihan-fullstack/src/parts/BookingTable.jsx":"48","/home/rizkyian78/latihan-fullstack/src/MasterValidation/mvBank.js":"49","/home/rizkyian78/latihan-fullstack/src/parts/FeatureAndActivityTable.jsx":"50","/home/rizkyian78/latihan-fullstack/src/pages/Admin/FeatureAndActivity.jsx":"51","/home/rizkyian78/latihan-fullstack/src/pages/Admin/Item.jsx":"52","/home/rizkyian78/latihan-fullstack/src/parts/ItemTable.jsx":"53","/home/rizkyian78/latihan-fullstack/src/pages/Admin/ShowImage.jsx":"54","/home/rizkyian78/latihan-fullstack/src/parts/ShowImage.jsx":"55"},{"size":477,"mtime":1608049840703,"results":"56","hashOfConfig":"57"},{"size":362,"mtime":1607961534108,"results":"58","hashOfConfig":"57"},{"size":1432,"mtime":1613315625764,"results":"59","hashOfConfig":"57"},{"size":1160,"mtime":1611380722069,"results":"60","hashOfConfig":"57"},{"size":2612,"mtime":1612017113087,"results":"61","hashOfConfig":"57"},{"size":267,"mtime":1611252030288,"results":"62","hashOfConfig":"57"},{"size":2307,"mtime":1608361183153,"results":"63","hashOfConfig":"57"},{"size":3884,"mtime":1611460969668,"results":"64","hashOfConfig":"57"},{"size":2256,"mtime":1611427378609,"results":"65","hashOfConfig":"57"},{"size":1646,"mtime":1610986994938,"results":"66","hashOfConfig":"57"},{"size":2134,"mtime":1611456384754,"results":"67","hashOfConfig":"57"},{"size":1814,"mtime":1611501778106,"results":"68","hashOfConfig":"57"},{"size":1303,"mtime":1610861738968,"results":"69","hashOfConfig":"57"},{"size":3004,"mtime":1611251722150,"results":"70","hashOfConfig":"57"},{"size":406,"mtime":1611253522378,"results":"71","hashOfConfig":"57"},{"size":867,"mtime":1611377270832,"results":"72","hashOfConfig":"57"},{"size":1840,"mtime":1611391970518,"results":"73","hashOfConfig":"57"},{"size":3281,"mtime":1611464399339,"results":"74","hashOfConfig":"57"},{"size":974,"mtime":1611426889144,"results":"75","hashOfConfig":"57"},{"size":1787,"mtime":1611411620463,"results":"76","hashOfConfig":"57"},{"size":710,"mtime":1611379662695,"results":"77","hashOfConfig":"57"},{"size":845,"mtime":1611381345882,"results":"78","hashOfConfig":"57"},{"size":907,"mtime":1611384863595,"results":"79","hashOfConfig":"57"},{"size":3858,"mtime":1612029166016,"results":"80","hashOfConfig":"57"},{"size":232,"mtime":1611499808906,"results":"81","hashOfConfig":"57"},{"size":4973,"mtime":1611508583785,"results":"82","hashOfConfig":"57"},{"size":231,"mtime":1611425450659,"results":"83","hashOfConfig":"57"},{"size":205,"mtime":1611501334646,"results":"84","hashOfConfig":"57"},{"size":766,"mtime":1611503435103,"results":"85","hashOfConfig":"57"},{"size":2856,"mtime":1611502928584,"results":"86","hashOfConfig":"57"},{"size":2373,"mtime":1611493178252,"results":"87","hashOfConfig":"57"},{"size":743,"mtime":1611500472093,"results":"88","hashOfConfig":"57"},{"size":327,"mtime":1611408301318,"results":"89","hashOfConfig":"57"},{"size":1715,"mtime":1611504636885,"results":"90","hashOfConfig":"57"},{"size":2295,"mtime":1611503115358,"results":"91","hashOfConfig":"57"},{"size":842,"mtime":1611409858555,"results":"92","hashOfConfig":"57"},{"size":426,"mtime":1611408802165,"results":"93","hashOfConfig":"57"},{"size":186,"mtime":1611408812165,"results":"94","hashOfConfig":"57"},{"size":3236,"mtime":1612629169584,"results":"95","hashOfConfig":"57"},{"size":500,"mtime":1612096407982,"results":"96","hashOfConfig":"57"},{"size":903,"mtime":1612071339646,"results":"97","hashOfConfig":"57"},{"size":2877,"mtime":1613221740065,"results":"98","hashOfConfig":"57"},{"size":7409,"mtime":1614266875171,"results":"99","hashOfConfig":"57"},{"size":742,"mtime":1613148269546,"results":"100","hashOfConfig":"57"},{"size":504,"mtime":1613159297971,"results":"101","hashOfConfig":"57"},{"size":9369,"mtime":1614093392705,"results":"102","hashOfConfig":"57"},{"size":513,"mtime":1612103690150,"results":"103","hashOfConfig":"57"},{"size":3472,"mtime":1612972161857,"results":"104","hashOfConfig":"57"},{"size":437,"mtime":1613314081127,"results":"105","hashOfConfig":"57"},{"size":9844,"mtime":1614272164675,"results":"106","hashOfConfig":"57"},{"size":518,"mtime":1613218327930,"results":"107","hashOfConfig":"57"},{"size":504,"mtime":1613221794022,"results":"108","hashOfConfig":"57"},{"size":21086,"mtime":1614264946536,"results":"109","hashOfConfig":"57"},{"size":176,"mtime":1613489720604,"results":"110","hashOfConfig":"57"},{"size":1642,"mtime":1614094385742,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"1mewalq",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"114"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"114"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"114"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"114"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"114"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"114"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"114"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"114"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"114"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"114"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"114"},"/home/rizkyian78/latihan-fullstack/src/index.js",[],["235","236"],"/home/rizkyian78/latihan-fullstack/src/reportWebVitals.js",[],"/home/rizkyian78/latihan-fullstack/src/App.jsx",[],"/home/rizkyian78/latihan-fullstack/src/pages/LandingPage.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/Header.jsx",["237"],"import React from 'react'\nimport Fade from 'react-reveal/Fade'\nimport Button from 'elements/Button'\nimport IconText from 'parts/IconText'\nimport { Helmet } from 'react-helmet'\n\nexport default function Header(props) {\n  const [Active, setActive] = React.useState(false)\n  const getNavLinkClass = (path) => {\n    return props.location.pathname === path ? 'active' : ' '\n  }\n  const darkMode = () => {\n    setActive(!Active)\n  }\n  if (props.isCentered) {\n    return (\n      <>\n        <Helmet>\n          <title>Thonhouse | CheckOut</title>\n        </Helmet>\n        <Fade>\n          <header className=\"spacing-sm\">\n            <div className=\"container\">\n              <nav className=\"navbar navbar-expand-lg navbar-light\">\n                <Button className=\"brand-text-icon mx-auto\" href=\"\" type=\"link\">\n                  Thon<span className=\"text-gray-900\">House.</span>\n                </Button>\n              </nav>\n            </div>\n          </header>\n        </Fade>\n      </>\n    )\n  }\n  return (\n    <Fade>\n      <header className=\"spacing-sm\">\n        <div className=\"container\">\n          <nav className=\"navbar navbar-expand-lg navbar-light\">\n            <IconText />\n            <div className=\"collapse navbar-collapse\">\n              <ul className=\"navbar-nav ml-auto\">\n                <li className={`nav-item ${getNavLinkClass('/')}`}>\n                  <Button className=\"nav-link\" type=\"link\" href=\"/\">\n                    Home\n                  </Button>\n                </li>\n                <li className={`nav-item ${getNavLinkClass('/browse-by')}`}>\n                  <Button className=\"nav-link\" type=\"link\" href=\"/browse-by\">\n                    Browse By\n                  </Button>\n                </li>\n                <li className={`nav-item ${getNavLinkClass('/stories')}`}>\n                  <Button className=\"nav-link\" type=\"link\" href=\"/stories\">\n                    Stories\n                  </Button>\n                </li>\n                <li className={`nav-item ${getNavLinkClass('/agents')}`}>\n                  <Button className=\"nav-link\" type=\"link\" href=\"/agents\">\n                    Agents\n                  </Button>\n                </li>\n                <li className={`nav-item`}></li>\n                <li className={`nav-item ${getNavLinkClass('/agents')}`}>\n                  <Button className=\"nav-link\" type=\"link\" href=\"/admin\">\n                    Admin\n                  </Button>\n                </li>\n                <li className={`nav-item`}></li>\n              </ul>\n            </div>\n          </nav>\n        </div>\n      </header>\n    </Fade>\n  )\n}\n","/home/rizkyian78/latihan-fullstack/src/parts/IconText.jsx",[],"/home/rizkyian78/latihan-fullstack/src/elements/Button/index.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/Hero.jsx",[],"/home/rizkyian78/latihan-fullstack/src/helper/Common.js",[],"/home/rizkyian78/latihan-fullstack/src/parts/MostPicked.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/Category.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/Testimony.jsx",[],"/home/rizkyian78/latihan-fullstack/src/elements/Star/index.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/Footer.jsx",[],"/home/rizkyian78/latihan-fullstack/src/elements/WhatsappButton/index.jsx",[],["238","239"],"/home/rizkyian78/latihan-fullstack/src/pages/Example.jsx",[],"/home/rizkyian78/latihan-fullstack/src/elements/Form/InputNumber/index.jsx",[],"/home/rizkyian78/latihan-fullstack/src/elements/Form/InputDate/index.jsx",[],"/home/rizkyian78/latihan-fullstack/src/elements/Form/BreadCrumbs/index.jsx",[],"/home/rizkyian78/latihan-fullstack/src/pages/DetailPage.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/PageDetailTitle.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/FeatureImage.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/PageDetailDescription.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/BookingForm.jsx",[],"/home/rizkyian78/latihan-fullstack/src/elements/Form/index.jsx",[],"/home/rizkyian78/latihan-fullstack/src/pages/CheckOut.jsx",[],"/home/rizkyian78/latihan-fullstack/src/helper/useValidate.js",[],"/home/rizkyian78/latihan-fullstack/src/elements/Form/InputText/schema.js",["240"],"import * as yup from 'yup'\n\nconst create = yup.object().shape({\n  email: yup\n    .string()\n    .email()\n    .typeError('Harus Di isi')\n    .required('Email Wajib Di isi'),\n})\n\nexport default {\n  create,\n}\n","/home/rizkyian78/latihan-fullstack/src/elements/Stepper/index.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/CheckOut/BookingInformation.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/CheckOut/Payment.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/CheckOut/Complete.jsx",[],"/home/rizkyian78/latihan-fullstack/src/elements/Stepper/Controller/index.jsx",[],"/home/rizkyian78/latihan-fullstack/src/elements/Form/InputFile/index.jsx",["241","242","243"],"import React from 'react'\nimport propTypes from 'prop-types'\n\nimport './index.scss'\nexport default function InputFile(props) {\n  const [FileName, setFileName] = React.useState('')\n  const {\n    value,\n    accept,\n    placeholder,\n    name,\n    prepend,\n    append,\n    outerClassName,\n    inputClassName,\n  } = props\n  const refInputFile = React.useRef(null)\n  const onChange = (event) => {\n    setFileName(event.target.value)\n    props.onChange({\n      target: {\n        name: event.target.name,\n        value: event.target.files,\n      },\n    })\n  }\n\n  return (\n    <div className={[`input-text mb-3`, outerClassName].join(' ')}>\n      <div className=\"input-group\">\n        {prepend && (\n          <div className=\"input-group-prepend bg-gray-900\">\n            <span className=\"input-group-text\">{prepend}</span>\n          </div>\n        )}\n\n        <input\n          accept={accept}\n          ref={refInputFile}\n          name={name}\n          type=\"file\"\n          value={FileName}\n          onChange={onChange}\n        />\n        {append && (\n          <div className=\"input-group-append bg-gray-900\">\n            <span className=\"input-group-text\">{append}</span>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nInputFile.defaultProps = {\n  placeholder: 'Please Type Here',\n}\n\nInputFile.propTypes = {\n  name: propTypes.string.isRequired,\n  accept: propTypes.string.isRequired,\n  value: propTypes.string.isRequired,\n  onChange: propTypes.func.isRequired,\n  prepend: propTypes.oneOfType([propTypes.number, propTypes.string]),\n  append: propTypes.oneOfType([propTypes.number, propTypes.string]),\n  placeholder: propTypes.string,\n  outerClassName: propTypes.string,\n  inputClassName: propTypes.string,\n}\n","/home/rizkyian78/latihan-fullstack/src/elements/Form/InputText/index.jsx",["244"],"import React from 'react'\nimport propTypes from 'prop-types'\nimport schema from './schema'\n\nimport './index.scss'\n\nexport default function IndexText(props) {\n  const {\n    value,\n    type,\n    placeholder,\n    name,\n    prepend,\n    append,\n    outerClassName,\n    inputClassName,\n    errorResponse,\n  } = props\n  const [HasError, setHasError] = React.useState(null)\n  let pattern = ''\n  if (type === 'email') pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n  if (type === 'tel') pattern = '[0-9]*'\n  const onChange = (event) => {\n    const target = {\n      target: {\n        name: name,\n        value: event.target.value,\n      },\n    }\n\n    if (type === 'email') {\n      if (!pattern.test(event.target.value)) setHasError(errorResponse)\n      else setHasError(null)\n    }\n\n    if (type === 'tel') {\n      if (event.target.validity.valid) props.onChange(target)\n    } else {\n      props.onChange(target)\n    }\n  }\n\n  return (\n    <div className={[`input-text mb-3`, outerClassName].join(' ')}>\n      <div className=\"input-group\">\n        {prepend && (\n          <div className=\"input-group-prepend bg-gray-900\">\n            <span className=\"input-group-text\">{prepend}</span>\n          </div>\n        )}\n        <input\n          type={type}\n          name={name}\n          className={[`form-control`, inputClassName].join(' ')}\n          value={value}\n          placeholder={placeholder}\n          onChange={onChange}\n        />\n        {append && (\n          <div className=\"input-group-append bg-gray-900\">\n            <span className=\"input-group-text\">{append}</span>\n          </div>\n        )}\n        {HasError && <span className=\"error-helper\">{HasError}</span>}\n      </div>\n    </div>\n  )\n}\n\nIndexText.defaultProps = {\n  type: 'text',\n  pattern: '',\n  placeholder: 'Please Type Here',\n  errorResponse: 'Please match the requested format',\n}\n\nIndexText.propTypes = {\n  name: propTypes.string.isRequired,\n  value: propTypes.oneOfType([propTypes.number, propTypes.string]).isRequired,\n  onChange: propTypes.func.isRequired,\n  prepend: propTypes.oneOfType([propTypes.number, propTypes.string]),\n  append: propTypes.oneOfType([propTypes.number, propTypes.string]),\n  type: propTypes.string,\n  placeholder: propTypes.string,\n  outerClassName: propTypes.string,\n  inputClassName: propTypes.string,\n}\n","/home/rizkyian78/latihan-fullstack/src/elements/Stepper/Numbering/index.jsx",[],"/home/rizkyian78/latihan-fullstack/src/elements/Stepper/Meta/index.jsx",[],"/home/rizkyian78/latihan-fullstack/src/elements/Stepper/MainContent/index.jsx",[],"/home/rizkyian78/latihan-fullstack/src/pages/Login.jsx",[],"/home/rizkyian78/latihan-fullstack/src/pages/Admin/Category.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/NavbarAdmin.jsx",["245","246"],"import Header from 'parts/Header'\nimport React, { Component } from 'react'\nimport { Navbar, Nav, Icon } from 'rsuite'\nimport { Badge } from 'antd'\n\nimport 'rsuite/dist/styles/rsuite-default.css'\nimport 'antd/dist/antd.css'\n\nexport default class Admin extends Component {\n  render() {\n    return (\n      <>\n        <Navbar appearance=\"subtle\" className=\"shadow\">\n          <Navbar.Header className=\"mb-2\">\n            <Header isCentered {...this.props} />\n          </Navbar.Header>\n          <Navbar.Body>\n            <Nav pullRight>\n              <Badge count={100} overflowCount={99} size=\"default\">\n                <a href=\"#\" className=\"head-example\" />\n              </Badge>\n              <Nav.Item icon={<Icon icon=\"bell\" size=\"lg\" />} active></Nav.Item>\n              <Nav.Item className>Sulton Amin</Nav.Item>\n            </Nav>\n          </Navbar.Body>\n        </Navbar>\n      </>\n    )\n  }\n}\n","/home/rizkyian78/latihan-fullstack/src/parts/Sidebar.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/CategoryTable.jsx",["247"],"/home/rizkyian78/latihan-fullstack/src/parts/SearchBar.jsx",["248","249","250","251"],"import React from 'react'\nimport { Input, Space, Row } from 'antd'\nimport { SearchOutlined } from '@ant-design/icons'\nimport axios from 'axios'\n\nimport 'antd/dist/antd.css'\n\nexport default function SearchBar(props) {\n  const [category, setCategory] = React.useState('')\n  const onSearch = (value) => {\n    axios\n      .get(\n        `http://localhost:8090/v1/category?filtered=[{\"id\":\"${props.field}\",\"value\":\"${value}\"}]`,\n      )\n      .then((res) => {\n        setCategory(res.data.data)\n      })\n      .catch((err) => console.log(err))\n  }\n  return (\n    <>\n      <Input.Search\n        height={200}\n        placeholder=\"Coba Cari Sini bos\"\n        onSearch={onSearch}\n        style={{ width: 300, borderRadius: 30 }}\n      />\n    </>\n  )\n}\n","/home/rizkyian78/latihan-fullstack/src/pages/Admin/Bank.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/BankTable.jsx",["252"],"import React from 'react'\nimport {\n  Table,\n  Button,\n  Card,\n  Row,\n  Col,\n  Typography,\n  Modal,\n  Input,\n  message,\n  Tooltip,\n  Popconfirm,\n  Image,\n  Upload,\n} from 'antd'\nimport { UploadOutlined } from '@ant-design/icons'\nimport SearchBar from './SearchBar'\nimport { Formik } from 'formik'\nimport axios from 'axios'\n\nimport 'antd/dist/antd.css'\n\nexport default function CategoryTable(props) {\n  const [isModalShow, setIsModalShow] = React.useState(false)\n  const [dataBank, setDataBank] = React.useState('')\n  const [modalType, setModalType] = React.useState('')\n  const [initialValues, setInitialValues] = React.useState({\n    id: '',\n    nameBank: '',\n    nomorRekening: '',\n    name: '',\n    image: '',\n  })\n\n  const columns = [\n    {\n      title: 'No',\n      dataIndex: 'nomor',\n      sorter: (a, b) => a.nomor - b.nomor,\n      sortDirections: ['desc'],\n    },\n    {\n      title: 'Nama Bank',\n      dataIndex: 'nameBank',\n      defaultSortOrder: 'desc',\n    },\n    {\n      title: 'Nomor Rekening',\n      dataIndex: 'nomorRekening',\n      filterMultiple: false,\n      sortDirections: ['desc', 'asc'],\n    },\n    {\n      title: 'Nama',\n      dataIndex: 'name',\n      defaultSortOrder: 'descend',\n    },\n    {\n      title: 'Image',\n      dataIndex: 'imageUrl',\n      render: (path) => (\n        <Image width={200} height={100} src={`http://localhost:8090/${path}`} />\n      ),\n    },\n    {\n      title: 'Action',\n      width: 200,\n      render: (value) => {\n        return (\n          <Row gutter={[6]} justify=\"space-around\">\n            <Col>\n              <Tooltip placement=\"rightTop\">\n                <Button\n                  style={{ borderRadius: 20 }}\n                  onClick={() => showModal(value)}\n                >\n                  Edit\n                </Button>\n              </Tooltip>\n            </Col>\n            <Col>\n              <Popconfirm\n                title=\"Are you sure to delete this item?\"\n                onConfirm={() => handleDelete(value)}\n                onCancel={cancel}\n                okText=\"Yes\"\n                cancelText=\"No\"\n                placement=\"left\"\n              >\n                <Tooltip placement=\"rightTop\">\n                  <Button style={{ borderRadius: 20 }} danger>\n                    Delete\n                  </Button>\n                </Tooltip>\n              </Popconfirm>\n            </Col>\n          </Row>\n        )\n      },\n    },\n  ]\n  React.useEffect(() => {\n    axios.get('http://localhost:8090/v1/bank').then((res) => {\n      setDataBank(res.data.data)\n    })\n  }, [axios])\n  function onChange(pagination, filters, sorter, extra) {\n    console.log(pagination, filters, sorter, extra)\n    console.log('params', pagination, filters, sorter, extra)\n  }\n  const handleAdd = (data) => {\n    axios\n      .post(`http://localhost:8090/v1/bank`, data)\n      .then((res) => {\n        message.success('Berhasil Menambah Data')\n        axios.get('http://localhost:8090/v1/bank').then((res) => {\n          setDataBank(res.data.data)\n        })\n      })\n      .catch((err) => {\n        message.error(err.response.data.message)\n      })\n\n    setIsModalShow(false)\n  }\n  function cancel(e) {\n    console.log(e)\n    message.error('Click on No')\n  }\n  const showModal = (value) => {\n    setInitialValues(value)\n    setIsModalShow(true)\n    setModalType('edit')\n  }\n  function handleDelete(data) {\n    axios.delete(`http://localhost:8090/v1/bank/${data._id}`).then((res) => {\n      axios\n        .get('http://localhost:8090/v1/bank')\n        .then((res) => {\n          setDataBank(res.data.data)\n        })\n        .catch((err) => message.error('Tidak Bisa Di Delete'))\n    })\n    message.success('Data berhasil Di Delete')\n  }\n  function handleEdit(id, data) {\n    axios\n      .put(`http://localhost:8090/v1/bank/${id}`, data)\n      .then((res) => {\n        axios\n          .get('http://localhost:8090/v1/bank')\n          .then((res) => {\n            message.success('Data Berhasil Diubah')\n            setDataBank(res.data.data)\n          })\n          .catch((err) => console.log(err))\n      })\n      .catch((err) => message.error(err.message))\n    setIsModalShow(false)\n  }\n  const handleOk = (e) => {\n    setIsModalShow(false)\n  }\n  const handleCancel = (e) => {\n    setIsModalShow(false)\n  }\n  const data = []\n  for (let i = 0; i < dataBank.length; i += 1) {\n    data.push({\n      _id: dataBank[i]._id,\n      nomor: i + 1,\n      nameBank: dataBank[i].nameBank,\n      nomorRekening: dataBank[i].nomorRekening,\n      imageUrl: dataBank[i].imageUrl,\n      name: dataBank[i].name,\n    })\n  }\n  return (\n    <>\n      <Card className=\"shadow mt-3\" style={{ borderRadius: 30 }}>\n        <Typography.Title level={2}>Bank</Typography.Title>\n        <Row justify=\"space-between\" align=\"middle\" gutter={[16, 8]}>\n          <Col>\n            <Button\n              type=\"primary\"\n              style={{ borderRadius: 10 }}\n              onClick={() => {\n                setIsModalShow(true)\n                setModalType('add')\n              }}\n            >\n              Add\n            </Button>\n            <Modal\n              afterClose={() => {\n                setInitialValues({\n                  name: '',\n                  image: '',\n                  nameBank: '',\n                  nomorRekening: '',\n                })\n              }}\n              centered\n              footer={null}\n              title={modalType === 'edit' ? 'Edit Item' : 'Add Item'}\n              visible={isModalShow}\n              onOk={handleOk}\n              onCancel={handleCancel}\n              bodyStyle={{ borderRadius: 20 }}\n            >\n              <Formik\n                initialValues={initialValues}\n                enableReinitialize={true}\n                onSubmit={(values, actions) => {\n                  const formData = new FormData()\n                  for (const [key, value] of Object.entries(values)) {\n                    if (key === 'image') {\n                      formData.append('image', values.image.originFileObj)\n                    } else {\n                      formData.append(key, value)\n                    }\n                  }\n                  if (modalType === 'edit') {\n                    handleEdit(values._id, formData)\n                  } else {\n                    handleAdd(formData)\n                  }\n                }}\n              >\n                {({ values, handleChange, handleSubmit, setFieldValue }) => {\n                  return (\n                    <>\n                      <Typography.Text>Nama Bank</Typography.Text>\n                      <Input\n                        placeholder=\"Input Nama Bank\"\n                        className=\"mt-2\"\n                        style={{ borderRadius: 10 }}\n                        name=\"nameBank\"\n                        value={values.nameBank}\n                        onChange={handleChange}\n                      />\n                      <Typography.Text>Nomor Rekening</Typography.Text>\n                      <Input\n                        placeholder=\"Input Nomor Rekening\"\n                        className=\"mt-2\"\n                        style={{ borderRadius: 10 }}\n                        name=\"nomorRekening\"\n                        value={values.nomorRekening}\n                        onChange={handleChange}\n                      />\n                      <Typography.Text>Nama</Typography.Text>\n                      <Input\n                        placeholder=\"Input Nama Pemilik Rekening\"\n                        className=\"mt-2\"\n                        style={{ borderRadius: 10 }}\n                        name=\"name\"\n                        value={values.name}\n                        onChange={handleChange}\n                      />\n                      <Upload\n                        accept=\"image/png, image/jpeg\"\n                        {...props}\n                        name=\"image\"\n                        onChange={(e) => {\n                          setFieldValue('image', e.file)\n                        }}\n                        className=\"mt-2\"\n                        style={{ borderRadius: 10 }}\n                        maxCount={1}\n                        type=\"select\"\n                      >\n                        <Button\n                          style={{ borderRadius: 20 }}\n                          className=\"mt-3\"\n                          icon={<UploadOutlined />}\n                        >\n                          Click to Upload Image\n                        </Button>\n                      </Upload>\n                      <Row justify=\"center\" className=\"mt-2\">\n                        <Col>\n                          <Button\n                            type=\"primary\"\n                            style={{ borderRadius: 10, width: 450 }}\n                            onClick={handleSubmit}\n                          >\n                            Submit\n                          </Button>\n                        </Col>\n                      </Row>\n                    </>\n                  )\n                }}\n              </Formik>\n            </Modal>\n          </Col>\n          <SearchBar />\n        </Row>\n        <Table\n          dataSource={data}\n          columns={columns}\n          bordered={true}\n          onChange={onChange}\n          pagination={{\n            pageSize: 5,\n            total: dataBank.length,\n          }}\n        />\n      </Card>\n    </>\n  )\n}\n","/home/rizkyian78/latihan-fullstack/src/pages/Admin/Booking.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/BookingTable.jsx",["253"],"import React from 'react'\nimport { Table, Button, Col, Modal, Typography, Card, Row, Input } from 'antd'\nimport SearchBar from './SearchBar'\n\nimport 'antd/dist/antd.css'\n\nexport default function CategoryTable() {\n  const [isModalShow, setIsModalShow] = React.useState(false)\n  const columns = [\n    {\n      title: 'No',\n      dataIndex: 'nomor',\n      filters: [\n        {\n          text: 'Joe',\n          value: 'Joe',\n        },\n        {\n          text: 'Jim',\n          value: 'Jim',\n        },\n        {\n          text: 'Submenu',\n          value: 'Submenu',\n          children: [\n            {\n              text: 'Green',\n              value: 'Green',\n            },\n            {\n              text: 'Black',\n              value: 'Black',\n            },\n          ],\n        },\n      ],\n      onFilter: (value, record) => record.name.indexOf(value) === 0,\n      sorter: (a, b) => a.name.length - b.name.length,\n      sortDirections: ['descend'],\n    },\n    {\n      title: 'Date',\n      dataIndex: 'name',\n      defaultSortOrder: 'descend',\n      sorter: (a, b) => a.age - b.age,\n    },\n    {\n      title: 'Title',\n      dataIndex: 'address',\n      filters: [\n        {\n          text: 'London',\n          value: 'London',\n        },\n        {\n          text: 'New York',\n          value: 'New York',\n        },\n      ],\n      filterMultiple: false,\n      onFilter: (value, record) => record.address.indexOf(value) === 0,\n      sorter: (a, b) => a.address.length - b.address.length,\n      sortDirections: ['descend', 'ascend'],\n    },\n    {\n      title: 'Name Member',\n      dataIndex: 'name',\n      defaultSortOrder: 'descend',\n      sorter: (a, b) => a.name - b.name,\n    },\n    {\n      title: 'Name Bank',\n      dataIndex: 'name',\n    },\n    {\n      title: 'Status',\n      dataIndex: 'name',\n    },\n    {\n      title: 'Action',\n      dataIndex: 'name',\n    },\n  ]\n  function onChange(pagination, filters, sorter, extra) {\n    console.log(pagination, filters, sorter, extra)\n    console.log('params', pagination, filters, sorter, extra)\n  }\n  function onChange(pagination, filters, sorter, extra) {\n    console.log(pagination, filters, sorter, extra)\n    console.log('params', pagination, filters, sorter, extra)\n  }\n  const showModal = () => {\n    setIsModalShow(true)\n  }\n  const handleOk = (e) => {\n    setIsModalShow(false)\n  }\n  const handleCancel = (e) => {\n    setIsModalShow(false)\n  }\n  return (\n    <>\n      <Card className=\"shadow mt-3\" style={{ borderRadius: 30 }}>\n        <Typography.Title level={2}>Booking</Typography.Title>\n        <Row justify=\"space-between\" gutter={[16, 8]}>\n          <Col>\n            <Button type=\"primary\" onClick={showModal}>\n              + Add\n            </Button>\n            <Modal\n              title=\"Basic Modal\"\n              visible={isModalShow}\n              onOk={handleOk}\n              onCancel={handleCancel}\n            >\n              <Typography.Text>Title</Typography.Text>\n              <Input placeholder=\"Input Title\" />\n              <Typography.Text>Price</Typography.Text>\n              <Input placeholder=\"Input Title\" />\n              <Typography.Text>Country</Typography.Text>\n              <Input placeholder=\"Input Title\" />\n              <Typography.Text>City</Typography.Text>\n              <Input placeholder=\"Input Title\" />\n            </Modal>\n          </Col>\n          <SearchBar />\n        </Row>\n        <Table columns={columns} onChange={onChange} />\n      </Card>\n    </>\n  )\n}\n","/home/rizkyian78/latihan-fullstack/src/MasterValidation/mvBank.js",["254"],"import * as Yup from 'yup'\n\nconst category = Yup.object().shape({\n  name: Yup.string().required('Mohon untuk isi nama'),\n})\nconst item = Yup.object().shape({\n  title: Yup.string().required('Mohon untuk isi Title'),\n  price: Yup.number().required('Mohon untuk isi Harga'),\n  city: Yup.string().required('Mohon untuk isi Kota'),\n  description: Yup.string().required('Mohon untuk isi Deskripsi'),\n})\n\nexport default {\n  category,\n  item,\n}\n","/home/rizkyian78/latihan-fullstack/src/parts/FeatureAndActivityTable.jsx",["255","256","257"],"/home/rizkyian78/latihan-fullstack/src/pages/Admin/FeatureAndActivity.jsx",[],"/home/rizkyian78/latihan-fullstack/src/pages/Admin/Item.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/ItemTable.jsx",["258","259","260"],"import React from 'react'\nimport {\n  Table,\n  Row,\n  Col,\n  Tooltip,\n  Button,\n  Popconfirm,\n  Card,\n  Typography,\n  Input,\n  Upload,\n  Tabs,\n  Select,\n  message,\n  notification,\n} from 'antd'\nimport SearchBar from './SearchBar'\nimport { UploadOutlined } from '@ant-design/icons'\nimport axios from 'axios'\nimport { numberFormat } from 'helper/Common'\nimport { Formik } from 'formik'\nimport { isArray } from 'lodash'\nimport schema from 'MasterValidation/mvBank'\n\nimport 'antd/dist/antd.css'\nimport { withRouter } from 'react-router-dom'\nconst { TabPane } = Tabs\n\nfunction ItemTable(props) {\n  const [dataItem, setDataItem] = React.useState('')\n  const [dataCategory, setDataCategory] = React.useState([])\n  const [tabs, setTabs] = React.useState('1')\n  const [initialValues, setInitialValues] = React.useState({\n    id: '',\n    title: '',\n    price: '',\n    city: '',\n    categoryId: {\n      id: '',\n      name: '',\n    },\n    images: [],\n    description: '',\n  })\n\n  React.useEffect(() => {\n    axios\n      .get('http://localhost:8090/v1/item')\n      .then((res) => {\n        setDataItem(res.data.data)\n      })\n      .catch((err) => console.log(err))\n    axios\n      .get('http://localhost:8090/v1/category')\n      .then((res) => {\n        setDataCategory(res.data.data)\n      })\n      .catch((err) => console.log(err))\n  }, [axios])\n\n  const columns = [\n    {\n      title: 'No',\n      width: 200,\n      dataIndex: 'nomor',\n      onFilter: (value, record) => record.name.indexOf(value) === 0,\n      sorter: (a, b) => a.name.length - b.name.length,\n      sortDirections: ['descend'],\n    },\n    {\n      title: 'Title',\n      dataIndex: 'title',\n      defaultSortOrder: 'descend',\n      sorter: (a, b) => a.age - b.age,\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      render: (value) => {\n        return <Typography>Rp {numberFormat(value)}</Typography>\n      },\n    },\n    {\n      title: 'Country',\n      dataIndex: 'country',\n      defaultSortOrder: 'descend',\n      sorter: (a, b) => a.age - b.age,\n    },\n    {\n      title: 'City',\n      dataIndex: 'city',\n      defaultSortOrder: 'descend',\n      sorter: (a, b) => a.age - b.age,\n    },\n    {\n      title: 'Action',\n      width: 300,\n      render: (value) => {\n        return (\n          <Row gutter={[2]} justify=\"space-around\">\n            <Col>\n              <Tooltip placement=\"rightTop\">\n                <Button\n                  style={{ borderRadius: 20 }}\n                  onClick={() => showModal(value)}\n                >\n                  Edit\n                </Button>\n              </Tooltip>\n            </Col>\n            <Col>\n              <Tooltip placement=\"rightTop\">\n                <Button\n                  style={{ borderRadius: 20 }}\n                  onClick={() => showImage(value)}\n                >\n                  Image\n                </Button>\n              </Tooltip>\n            </Col>\n            <Col>\n              <Tooltip placement=\"rightTop\">\n                <Button\n                  style={{ borderRadius: 20 }}\n                  onClick={() => setTabs('2')}\n                >\n                  Add\n                </Button>\n              </Tooltip>\n            </Col>\n            <Col>\n              <Popconfirm\n                title=\"Are you sure to delete this task?\"\n                onConfirm={() => handleDelete(value)}\n                // onCancel={cancel}\n                okText=\"Yes\"\n                cancelText=\"No\"\n                placement=\"left\"\n              >\n                <Tooltip placement=\"rightTop\">\n                  <Button style={{ borderRadius: 20 }}>Delete</Button>\n                </Tooltip>\n              </Popconfirm>\n            </Col>\n          </Row>\n        )\n      },\n    },\n  ]\n  const data = []\n  for (let i = 0; i < dataItem.length; i++) {\n    data.push({\n      id: dataItem[i]._id,\n      nomor: i + 1,\n      title: dataItem[i].title,\n      price: dataItem[i].price,\n      country: dataItem[i].country,\n      city: dataItem[i].city,\n      categoryId: dataItem[i].categoryId,\n      description: dataItem[i].description,\n    })\n  }\n  const showModal = (data) => {\n    setTabs('3')\n    setInitialValues({ ...data })\n  }\n  const showImage = (data) => {\n    props.history.push(`/admin/item/image/${data.id}`)\n  }\n  const handleAdd = (data) => {\n    console.log(data)\n    axios\n      .post(`http://localhost:8090/v1/item`, data)\n      .then((res) => {\n        setTabs('1')\n        axios.get('http://localhost:8090/v1/item').then((res) => {\n          message.success('Berhasil Menambah Data')\n          setDataItem(res.data.data)\n          setTabs('1')\n        })\n      })\n      .catch((err) => {\n        message.error('Harap Masukkan nama')\n      })\n  }\n  function handleEdit(id, formData) {\n    console.log(formData)\n    axios\n      .put(`http://localhost:8090/v1/item/${id}`, formData)\n      .then((res) => {\n        axios\n          .get('http://localhost:8090/v1/item')\n          .then((res) => {\n            message.success('Data Berhasil Diubah')\n            setDataItem(res.data.data)\n          })\n          .catch((err) => console.log(err))\n      })\n      .catch((err) => notification.error(err.message))\n  }\n\n  function handleDelete(data) {\n    axios.delete(`http://localhost:8090/v1/item/${data._id}`).then((res) => {\n      axios\n        .get('http://localhost:8090/v1/item')\n        .then((res) => {\n          setDataItem(res.data.data)\n        })\n        .catch((err) => message.error('Blok'))\n    })\n    message.success('Data berhasil Di Delete')\n  }\n  return (\n    <>\n      <Card className=\"shadow mt-3\" style={{ borderRadius: 30 }}>\n        <Typography.Title level={2}>Detail Item</Typography.Title>\n        <Tabs\n          tabBarGutter={6}\n          size=\"middle\"\n          style={{ marginBottom: 32 }}\n          type=\"card\"\n          defaultActiveKey=\"1\"\n          activeKey={tabs}\n        >\n          <TabPane tab=\"Show Item\" key=\"1\">\n            <SearchBar />\n            <Table dataSource={data} columns={columns} className=\"mt-2\" />\n          </TabPane>\n          <TabPane tab=\"Edit Item\" key=\"3\" disabled>\n            <Formik\n              initialValues={initialValues}\n              validationSchema={schema.item}\n              onSubmit={(values, actions) => {\n                const formData = new FormData()\n                for (const [key, value] of Object.entries(values)) {\n                  if (key === 'categoryId') {\n                    formData.append('categoryId', value._id)\n                  }\n                  if (key === 'images') {\n                    value.map((x) => {\n                      formData.append('images', x.originFileObj)\n                    })\n                  }\n                  formData.append(key, value)\n                }\n                console.log(formData.get('id'))\n                handleEdit(values.id, formData)\n              }}\n            >\n              {({\n                values,\n                handleChange,\n                handleSubmit,\n                setFieldValue,\n                errors,\n                touched,\n              }) => {\n                return (\n                  <>\n                    <Col span={20}>\n                      <Typography.Text>\n                        Title<span style={{ color: 'red' }}>*</span>\n                      </Typography.Text>\n                      <Input\n                        placeholder=\"Input Title\"\n                        className=\"mt-2\"\n                        onChange={handleChange}\n                        name=\"title\"\n                        value={values.title}\n                        style={{ borderRadius: 10 }}\n                      />\n                      {touched.title && (\n                        <p className=\"bounce\" style={{ color: 'red' }}>\n                          {errors.title}\n                        </p>\n                      )}\n                    </Col>\n                    <Col span={20}>\n                      <Typography.Text>\n                        Price<span style={{ color: 'red' }}>*</span>\n                      </Typography.Text>\n                      <Input\n                        placeholder=\"Input Harga\"\n                        className=\"mt-2\"\n                        type=\"number\"\n                        value={values.price}\n                        onChange={handleChange}\n                        name=\"price\"\n                        style={{ borderRadius: 10 }}\n                      />\n                      {touched.price && (\n                        <p className=\"bounce\" style={{ color: 'red' }}>\n                          {errors.price}\n                        </p>\n                      )}\n                    </Col>\n                    <Col span={20}>\n                      <Typography.Text>\n                        City<span style={{ color: 'red' }}>*</span>\n                      </Typography.Text>\n                      <Input\n                        placeholder=\"Input Nama Kota\"\n                        onChange={handleChange}\n                        name=\"city\"\n                        value={values.city}\n                        className=\"mt-2\"\n                        style={{ borderRadius: 10 }}\n                      />\n                      {touched.city && (\n                        <p className=\"bounce\" style={{ color: 'red' }}>\n                          {errors.city}\n                        </p>\n                      )}\n                    </Col>\n                    <Col span={20}>\n                      <Typography.Text>\n                        Category<span style={{ color: 'red' }}>*</span>\n                      </Typography.Text>\n                      <Col>\n                        <Select\n                          showSearch\n                          allowClear\n                          style={{ width: 500 }}\n                          placeholder=\"Select a Category\"\n                          value={values.categoryId.name}\n                          optionFilterProp=\"children\"\n                          filterOption={(input, option) =>\n                            option.children\n                              .toLowerCase()\n                              .indexOf(input.toLowerCase()) >= 0\n                          }\n                          onChange={(values) =>\n                            setFieldValue('categoryId', values)\n                          }\n                        >\n                          {dataCategory.map((item) => {\n                            return (\n                              <Select.Option key={item._id}>\n                                {item.name}\n                              </Select.Option>\n                            )\n                          })}\n                        </Select>\n                        {touched.categoryId && (\n                          <p className=\"bounce\" style={{ color: 'red' }}>\n                            {errors.categoryId}\n                          </p>\n                        )}\n                      </Col>\n                    </Col>\n                    <Upload\n                      {...props}\n                      beforeUpload={(file, fileList) => {\n                        const fileSize = file.size / 1024 / 1024\n                        if (fileSize > 2) {\n                          throw notification.error({\n                            message: 'Image must smaller than 2MB!',\n                            description:\n                              'Mohon file yang di upload kurang dari 2MB',\n                          })\n                        }\n                      }}\n                      multiple\n                      accept=\"image/png, image/jpeg\"\n                      onChange={(values) => {\n                        setFieldValue('images', values.fileList)\n                      }}\n                    >\n                      <Col className=\"mt-3\">\n                        <Typography.Text>\n                          Image<span style={{ color: 'red' }}>*</span>\n                        </Typography.Text>\n                      </Col>\n                      <Button icon={<UploadOutlined />}>\n                        Click to Upload Image\n                      </Button>\n                    </Upload>\n                    <Col span={20} className=\"mt-3\">\n                      <Typography.Text>\n                        Description<span style={{ color: 'red' }}>*</span>\n                      </Typography.Text>\n                      <Input.TextArea\n                        placeholder=\"Input Deskripsi\"\n                        className=\"mt-2\"\n                        type=\"text\"\n                        name=\"description\"\n                        value={values.description}\n                        onChange={handleChange}\n                        style={{ borderRadius: 10, height: 100 }}\n                      />\n                      {touched.description && (\n                        <p className=\"bounce\" style={{ color: 'red' }}>\n                          {errors.description}\n                        </p>\n                      )}\n                    </Col>\n                    <Row justify=\"space-between\">\n                      <Button\n                        className=\"mt-3\"\n                        type=\"primary\"\n                        style={{ borderRadius: 10, width: 300 }}\n                        onClick={handleSubmit}\n                      >\n                        Submit\n                      </Button>\n                      <Button\n                        className=\"mt-3\"\n                        type=\"primary\"\n                        style={{ borderRadius: 10, width: 300 }}\n                        onClick={() => setTabs('1')}\n                      >\n                        Back\n                      </Button>\n                    </Row>\n                    <Col className=\"mt-3\">\n                      <span style={{ color: 'red' }}>*</span> Required\n                    </Col>\n                  </>\n                )\n              }}\n            </Formik>\n          </TabPane>\n          <TabPane tab={'Add Item'} key=\"2\">\n            <Formik\n              initialValues={initialValues}\n              validationSchema={schema.item}\n              onSubmit={(values, actions) => {\n                const formData = new FormData()\n                for (const [key, value] of Object.entries(values)) {\n                  if (isArray(value) && key === 'images') {\n                    value.map((item) => {\n                      formData.append(key, item.originFileObj)\n                    })\n                  }\n                  formData.append(key, value)\n                }\n                handleAdd(formData)\n                setTabs('1')\n              }}\n            >\n              {({\n                values,\n                handleChange,\n                handleSubmit,\n                setFieldValue,\n                errors,\n                touched,\n              }) => {\n                return (\n                  <>\n                    <Col span={20}>\n                      <Typography.Text>\n                        Title<span style={{ color: 'red' }}>*</span>\n                      </Typography.Text>\n                      <Input\n                        placeholder=\"Input Title\"\n                        className=\"mt-2\"\n                        onChange={handleChange}\n                        name=\"title\"\n                        style={{ borderRadius: 10 }}\n                      />\n                      {touched.title && (\n                        <p className=\"bounce\" style={{ color: 'red' }}>\n                          {errors.title}\n                        </p>\n                      )}\n                    </Col>\n                    <Col span={20}>\n                      <Typography.Text>\n                        Price<span style={{ color: 'red' }}>*</span>\n                      </Typography.Text>\n                      <Input\n                        placeholder=\"Input Harga\"\n                        className=\"mt-2\"\n                        type=\"number\"\n                        onChange={handleChange}\n                        name=\"price\"\n                        style={{ borderRadius: 10 }}\n                      />\n                      {touched.price && (\n                        <p className=\"bounce\" style={{ color: 'red' }}>\n                          {errors.price}\n                        </p>\n                      )}\n                    </Col>\n                    <Col span={20}>\n                      <Typography.Text>\n                        City<span style={{ color: 'red' }}>*</span>\n                      </Typography.Text>\n                      <Input\n                        placeholder=\"Input Nama Kota\"\n                        onChange={handleChange}\n                        name=\"city\"\n                        className=\"mt-2\"\n                        style={{ borderRadius: 10 }}\n                      />\n                      {touched.city && (\n                        <p className=\"bounce\" style={{ color: 'red' }}>\n                          {errors.city}\n                        </p>\n                      )}\n                    </Col>\n                    <Col span={20}>\n                      <Typography.Text>\n                        Category<span style={{ color: 'red' }}>*</span>\n                      </Typography.Text>\n                      <Col>\n                        <Select\n                          showSearch\n                          allowClear\n                          style={{ width: 500 }}\n                          placeholder=\"Select a Category\"\n                          value={values.categoryId.name}\n                          optionFilterProp=\"children\"\n                          filterOption={(input, option) =>\n                            option.children\n                              .toLowerCase()\n                              .indexOf(input.toLowerCase()) >= 0\n                          }\n                          onChange={(values) =>\n                            setFieldValue('categoryId', values)\n                          }\n                        >\n                          {dataCategory.map((item) => {\n                            return (\n                              <Select.Option key={item._id}>\n                                {item.name}\n                              </Select.Option>\n                            )\n                          })}\n                        </Select>\n                        {touched.categoryId && (\n                          <p className=\"bounce\" style={{ color: 'red' }}>\n                            {errors.categoryId}\n                          </p>\n                        )}\n                      </Col>\n                    </Col>\n                    <Upload\n                      {...props}\n                      multiple\n                      accept=\"image/png, image/jpeg\"\n                      onChange={(values) => {\n                        setFieldValue('images', values.fileList)\n                      }}\n                    >\n                      <Col className=\"mt-3\">\n                        <Typography.Text>\n                          Image<span style={{ color: 'red' }}>*</span>\n                        </Typography.Text>\n                      </Col>\n                      <Button icon={<UploadOutlined />}>\n                        Click to Upload Image\n                      </Button>\n                    </Upload>\n                    <Col span={20} className=\"mt-3\">\n                      <Typography.Text>\n                        Description<span style={{ color: 'red' }}>*</span>\n                      </Typography.Text>\n                      <Input.TextArea\n                        placeholder=\"Input Deskripsi\"\n                        className=\"mt-2\"\n                        type=\"text\"\n                        name=\"description\"\n                        onChange={handleChange}\n                        style={{ borderRadius: 10, height: 100 }}\n                      />\n                      {touched.description && (\n                        <p className=\"bounce\" style={{ color: 'red' }}>\n                          {errors.description}\n                        </p>\n                      )}\n                    </Col>\n                    <Row justify=\"space-between\">\n                      <Button\n                        className=\"mt-3\"\n                        type=\"primary\"\n                        style={{ borderRadius: 10, width: 300 }}\n                        onClick={handleSubmit}\n                      >\n                        Submit\n                      </Button>\n                      <Button\n                        className=\"mt-3\"\n                        type=\"primary\"\n                        style={{ borderRadius: 10, width: 300 }}\n                        onClick={() => setTabs('1')}\n                      >\n                        Back\n                      </Button>\n                    </Row>\n                    <Col className=\"mt-3\">\n                      <span style={{ color: 'red' }}>*</span> Required\n                    </Col>\n                  </>\n                )\n              }}\n            </Formik>\n          </TabPane>\n        </Tabs>\n      </Card>\n    </>\n  )\n}\n\nexport default withRouter(ItemTable)\n","/home/rizkyian78/latihan-fullstack/src/pages/Admin/ShowImage.jsx",[],"/home/rizkyian78/latihan-fullstack/src/parts/ShowImage.jsx",["261"],"import React, { useEffect } from 'react'\nimport { Image, message, Row, Col, Card, Button } from 'antd'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\n\nimport NavbarAdmin from 'parts/NavbarAdmin'\nimport SideBar from 'parts/Sidebar'\n\nimport 'antd/dist/antd.css'\n\nfunction ShowImage(props) {\n  const {\n    match: {\n      params: { id },\n    },\n  } = props\n  const [dataImage, setDataImage] = React.useState([])\n  useEffect(() => {\n    axios\n      .get(`http://localhost:8090/v1/item/${id}`)\n      .then((res) => {\n        setDataImage(res.data.data)\n      })\n      .catch((err) => message.error('ini error'))\n  }, [axios])\n  return (\n    <>\n      <NavbarAdmin />\n\n      <Row align=\"top\" gutter={12}>\n        <SideBar />\n        {dataImage.images ? (\n          dataImage.images.map((x, index) => {\n            if (index === 0) {\n            }\n            return (\n              <Col className=\"mt-3\">\n                <Card\n                  style={{\n                    borderRadius: 10,\n                    boxShadow: '2px 2px 4px #000000',\n                  }}\n                  hoverable\n                >\n                  <Image\n                    key={x._id}\n                    height={index === 1 ? 200 : 350}\n                    width={index === 1 ? 300 : 200}\n                    src={`http://localhost:8090/${x.imageUrl}`}\n                  />\n                </Card>\n              </Col>\n            )\n          })\n        ) : (\n          <p>Loading</p>\n        )}\n      </Row>\n      <Button onClick={() => props.history.push('/admin/item')}>Back</Button>\n    </>\n  )\n}\n\nexport default withRouter(ShowImage)\n",{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":12,"column":9,"nodeType":"268","messageId":"269","endLine":12,"endColumn":17},{"ruleId":"262","replacedBy":"270"},{"ruleId":"264","replacedBy":"271"},{"ruleId":"272","severity":1,"message":"273","line":11,"column":1,"nodeType":"274","endLine":13,"endColumn":2},{"ruleId":"266","severity":1,"message":"275","line":8,"column":5,"nodeType":"268","messageId":"269","endLine":8,"endColumn":10},{"ruleId":"266","severity":1,"message":"276","line":10,"column":5,"nodeType":"268","messageId":"269","endLine":10,"endColumn":16},{"ruleId":"266","severity":1,"message":"277","line":15,"column":5,"nodeType":"268","messageId":"269","endLine":15,"endColumn":19},{"ruleId":"266","severity":1,"message":"278","line":3,"column":8,"nodeType":"268","messageId":"269","endLine":3,"endColumn":14},{"ruleId":"279","severity":1,"message":"280","line":20,"column":17,"nodeType":"281","endLine":20,"endColumn":56},{"ruleId":"282","severity":1,"message":"283","line":20,"column":17,"nodeType":"281","endLine":20,"endColumn":56},{"ruleId":"284","severity":1,"message":"285","line":39,"column":6,"nodeType":"286","endLine":39,"endColumn":13,"suggestions":"287"},{"ruleId":"266","severity":1,"message":"288","line":2,"column":17,"nodeType":"268","messageId":"269","endLine":2,"endColumn":22},{"ruleId":"266","severity":1,"message":"289","line":2,"column":24,"nodeType":"268","messageId":"269","endLine":2,"endColumn":27},{"ruleId":"266","severity":1,"message":"290","line":3,"column":10,"nodeType":"268","messageId":"269","endLine":3,"endColumn":24},{"ruleId":"266","severity":1,"message":"291","line":9,"column":10,"nodeType":"268","messageId":"269","endLine":9,"endColumn":18},{"ruleId":"284","severity":1,"message":"285","line":107,"column":6,"nodeType":"286","endLine":107,"endColumn":13,"suggestions":"292"},{"ruleId":"293","severity":1,"message":"294","line":88,"column":12,"nodeType":"268","messageId":"295","endLine":88,"endColumn":20},{"ruleId":"272","severity":1,"message":"273","line":13,"column":1,"nodeType":"274","endLine":16,"endColumn":2},{"ruleId":"266","severity":1,"message":"296","line":26,"column":16,"nodeType":"268","messageId":"269","endLine":26,"endColumn":23},{"ruleId":"266","severity":1,"message":"297","line":28,"column":25,"nodeType":"268","messageId":"269","endLine":28,"endColumn":41},{"ruleId":"284","severity":1,"message":"285","line":38,"column":6,"nodeType":"286","endLine":38,"endColumn":13,"suggestions":"298"},{"ruleId":"284","severity":1,"message":"285","line":60,"column":6,"nodeType":"286","endLine":60,"endColumn":13,"suggestions":"299"},{"ruleId":"300","severity":1,"message":"301","line":241,"column":35,"nodeType":"302","messageId":"303","endLine":241,"endColumn":37},{"ruleId":"300","severity":1,"message":"301","line":432,"column":38,"nodeType":"302","messageId":"303","endLine":432,"endColumn":40},{"ruleId":"284","severity":1,"message":"304","line":25,"column":6,"nodeType":"286","endLine":25,"endColumn":13,"suggestions":"305"},"no-native-reassign",["306"],"no-negated-in-lhs",["307"],"no-unused-vars","'darkMode' is assigned a value but never used.","Identifier","unusedVar",["306"],["307"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'value' is assigned a value but never used.","'placeholder' is assigned a value but never used.","'inputClassName' is assigned a value but never used.","'schema' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook React.useEffect has an unnecessary dependency: 'axios'. Either exclude it or remove the dependency array. Outer scope values like 'axios' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["308"],"'Space' is defined but never used.","'Row' is defined but never used.","'SearchOutlined' is defined but never used.","'category' is assigned a value but never used.",["309"],"no-redeclare","'onChange' is already defined.","redeclared","'setSize' is assigned a value but never used.","'setInitialValues' is assigned a value but never used.",["310"],["311"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array. Outer scope values like 'axios' aren't valid dependencies because mutating them doesn't re-render the component.",["312"],"no-global-assign","no-unsafe-negation",{"desc":"313","fix":"314"},{"desc":"313","fix":"315"},{"desc":"313","fix":"316"},{"desc":"313","fix":"317"},{"desc":"318","fix":"319"},"Update the dependencies array to be: []",{"range":"320","text":"321"},{"range":"322","text":"321"},{"range":"323","text":"321"},{"range":"324","text":"321"},"Update the dependencies array to be: [id]",{"range":"325","text":"326"},[838,845],"[]",[2550,2557],[799,806],[1326,1333],[636,643],"[id]"]